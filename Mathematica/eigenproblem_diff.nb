(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    123891,       2541]
NotebookOptionsPosition[    117556,       2437]
NotebookOutlinePosition[    117984,       2454]
CellTagsIndexPosition[    117941,       2451]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"n", ",", "d", ",", "L", ",", "\[Phi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9103464279350724`*^9, 3.910346433082547*^9}, {
  3.914562128206292*^9, 3.914562128634693*^9}, {3.915602418111929*^9, 
  3.915602420795527*^9}},
 CellLabel->
  "In[1208]:=",ExpressionUUID->"49243175-8439-47b8-9a72-4f8a5d0407e2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Steady", " ", "state"}], "*)"}]], "Input",
 CellChangeTimes->{{3.910352674458229*^9, 3.9103526853326626`*^9}, {
  3.922764212264181*^9, 
  3.922764214116308*^9}},ExpressionUUID->"8b3570b2-53a9-4f3f-9370-\
a894d2384f9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pst", "[", "x_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"2", "L"}]]}]], "Input",
 CellChangeTimes->{{3.910345907734851*^9, 3.9103459192902727`*^9}, 
   3.910345961308247*^9, 3.914316315733678*^9, {3.9145620610411873`*^9, 
   3.9145620642564363`*^9}, {3.914562131873945*^9, 3.914562139895892*^9}},
 CellLabel->
  "In[1205]:=",ExpressionUUID->"344c46a3-77f7-4ed3-810d-1cdab31e64f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Pst", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"L", ">", "0"}]}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9103458007061524`*^9, 3.9103458988044767`*^9}, {
  3.9103459311672106`*^9, 3.910345971620475*^9}, {3.9145621059050007`*^9, 
  3.914562126125*^9}},
 CellLabel->
  "In[1206]:=",ExpressionUUID->"3f817989-ddaf-47d3-8ebb-cdf3d8ca05e0"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.9103458994070168`*^9, {3.910345933641721*^9, 3.910345972271508*^9}, 
   3.9103464367799063`*^9, 3.9103500931191683`*^9, 3.9103528865370026`*^9, 
   3.91456215040305*^9, 3.915535124558404*^9, 3.915537914019184*^9, 
   3.915602398489025*^9},
 CellLabel->
  "Out[1206]=",ExpressionUUID->"e9cf0565-d74c-4c8d-86c2-5b050ab037a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"General", " ", "solution"}], "*)"}]], "Input",
 CellChangeTimes->{{3.910352688642685*^9, 3.9103526972115746`*^9}, {
  3.922764217847781*^9, 
  3.922764222218746*^9}},ExpressionUUID->"8dd3e2fd-5f1d-4e58-8cd1-\
3e12e107e9d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "*", 
     RowBox[{
      RowBox[{"\[Phi]", "''"}], "[", "x", "]"}]}], "==", 
    RowBox[{
     RowBox[{"-", "\[Lambda]"}], "*", 
     RowBox[{"\[Phi]", "[", "x", "]"}]}]}], ",", 
   RowBox[{"\[Phi]", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.910233785156114*^9, 3.9102338841368465`*^9}, 
   3.9102339332003174`*^9, {3.9102341241696997`*^9, 3.910234165128805*^9}, {
   3.9102342492497683`*^9, 3.9102342587308745`*^9}, 3.9102363574147463`*^9, {
   3.910236833130488*^9, 3.9102368667513447`*^9}, {3.910237367435562*^9, 
   3.9102373803083954`*^9}, 3.910237421723133*^9, {3.910319383141274*^9, 
   3.9103193884722652`*^9}, 3.910320451095008*^9, {3.9103458130824356`*^9, 
   3.9103458132595263`*^9}, {3.910345915732971*^9, 3.9103459160825176`*^9}, 
   3.910345984988186*^9, {3.910346568461239*^9, 3.910346569670755*^9}, 
   3.9103466055056424`*^9, {3.91456215866154*^9, 3.914562159176713*^9}},
 CellLabel->
  "In[1209]:=",ExpressionUUID->"d1cb82f7-ca8c-47c2-8358-1b943b425fdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"x", " ", 
         SqrtBox["\[Lambda]"]}], 
        SqrtBox["d"]], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"x", " ", 
         SqrtBox["\[Lambda]"]}], 
        SqrtBox["d"]], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.910233884897541*^9, 3.9102339341042905`*^9, {3.910234116775361*^9, 
   3.9102341657292185`*^9}, {3.910234252637769*^9, 3.9102342591490793`*^9}, {
   3.910236352554325*^9, 3.9102363577770815`*^9}, {3.910236852156395*^9, 
   3.91023686722847*^9}, 3.9102370936808443`*^9, 3.9102373806226215`*^9, 
   3.9102374220042453`*^9, {3.9103193838973293`*^9, 3.910319389087596*^9}, 
   3.9103196556607027`*^9, 3.9103204567915597`*^9, 3.910341618764413*^9, 
   3.910345813959198*^9, {3.91034597926505*^9, 3.9103459852583933`*^9}, 
   3.910346437247529*^9, 3.9103466260301557`*^9, 3.9103500933856955`*^9, 
   3.9103528873485146`*^9, 3.914562215557445*^9, 3.915535124570116*^9, 
   3.9155379163493233`*^9, 3.915538106384696*^9, {3.915602377360632*^9, 
   3.915602426279277*^9}},
 CellLabel->
  "Out[1209]=",ExpressionUUID->"daf105de-33e3-451e-b47c-d99f1f8a4047"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "Solutions", "*)"}]], "Input",
 CellChangeTimes->{{3.9103526999620953`*^9, 3.910352733112924*^9}, {
  3.9145622208942423`*^9, 3.9145622219470997`*^9}, {3.922764226119631*^9, 
  3.922764227273246*^9}},ExpressionUUID->"c9646888-737d-4041-9508-\
7a5c77764b4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", "[", "x_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c1", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          SqrtBox["\[Lambda]"], 
          SqrtBox["d"]], ")"}], "x"}], "]"}]}], " ", "+", 
     RowBox[{"c2", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          SqrtBox["\[Lambda]"], 
          SqrtBox["d"]], ")"}], "x"}], "]"}]}]}], " ", ")"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.910233921297414*^9, 3.9102339619877462`*^9}, {
   3.9102340627213893`*^9, 3.910234064431986*^9}, {3.910234182782955*^9, 
   3.910234226488716*^9}, 3.9102356939620647`*^9, 3.910236373850011*^9, {
   3.910237411438348*^9, 3.9102374361469593`*^9}, {3.910320464840242*^9, 
   3.910320473902128*^9}, {3.9103497137213507`*^9, 3.9103498605353785`*^9}, {
   3.9103502010230875`*^9, 3.9103502064576735`*^9}, {3.9103502668962593`*^9, 
   3.9103502713175*^9}, {3.91035275337906*^9, 3.9103527544571877`*^9}, 
   3.9145621839575043`*^9, {3.914562224902939*^9, 3.9145623339074917`*^9}, 
   3.915602366900263*^9, 3.915602460003929*^9},
 CellLabel->
  "In[1210]:=",ExpressionUUID->"71bc219a-4eb8-46d9-b87b-afaff6d9f54c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Definition", " ", "of", " ", "the", " ", "probability", " ", "current"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.910352755775782*^9, 3.9103527633620367`*^9}, {
  3.9145623485572567`*^9, 3.914562371129496*^9}, {3.922764234191042*^9, 
  3.922764242006304*^9}},ExpressionUUID->"40e87909-1457-4ae4-8b15-\
57a6375ca2ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"J", "[", "x_", "]"}], ":=", 
   RowBox[{"d", "*", 
    RowBox[{
     RowBox[{"\[Phi]", "'"}], "[", "x", "]"}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.91456235771196*^9, 3.914562363840805*^9}, {
   3.914562401331155*^9, 3.9145624062555103`*^9}, 3.914562466780006*^9},
 CellLabel->
  "In[1211]:=",ExpressionUUID->"60e72b82-168d-4eec-87ac-723607f21055"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Periodic", " ", "boundary", " ", "conditions"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9103527690479903`*^9, 3.9103527796788597`*^9}, {
  3.9145626739550467`*^9, 3.914562684722193*^9}, {3.922764247938108*^9, 
  3.9227642543617764`*^9}},ExpressionUUID->"8959690f-01f2-4545-b622-\
1b30eac1406c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "L", "]"}], "-", 
    RowBox[{"\[Phi]", "[", 
     RowBox[{"-", "L"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"J", "[", "L", "]"}], "-", 
    RowBox[{"J", "[", 
     RowBox[{"-", "L"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.910233970821181*^9, 3.9102340157239494`*^9}, {
   3.9102342307076473`*^9, 3.9102342939548793`*^9}, 3.910236397648797*^9, {
   3.9102374544024796`*^9, 3.9102374733810835`*^9}, {3.910241851687128*^9, 
   3.9102418641387672`*^9}, {3.9145623799755697`*^9, 
   3.9145623975806217`*^9}, {3.914562475900916*^9, 3.914562477948331*^9}, {
   3.914562687928966*^9, 3.91456269407088*^9}},
 CellLabel->
  "In[1212]:=",ExpressionUUID->"b6778d21-ba38-461e-8bd2-76b9d5dc14e4"],

Cell[BoxData[
 RowBox[{"2", " ", "c2", " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"L", " ", 
     SqrtBox["\[Lambda]"]}], 
    SqrtBox["d"]], "]"}]}]], "Output",
 CellChangeTimes->{{3.910234044930402*^9, 3.9102340652815294`*^9}, 
   3.910234283541933*^9, 3.9102356973513794`*^9, {3.910236379536438*^9, 
   3.9102364029667263`*^9}, {3.9102374451195836`*^9, 3.910237473879096*^9}, 
   3.910241870639761*^9, 3.9102422068861914`*^9, 3.910319657078743*^9, 
   3.9103204792293324`*^9, 3.910341620693353*^9, 3.9103464390378823`*^9, 
   3.9103499889023275`*^9, 3.9103502131963153`*^9, 3.910350274186978*^9, 
   3.9103528948292294`*^9, 3.914562483118944*^9, 3.9145626963816633`*^9, 
   3.915535124628469*^9, 3.9155379257424183`*^9, 3.9155379604602623`*^9, 
   3.915538113894985*^9, 3.915602504269114*^9},
 CellLabel->
  "Out[1212]=",ExpressionUUID->"aab5543f-4f2d-4775-a8aa-aedebc9d800e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "c1", " ", 
  SqrtBox["d"], " ", 
  SqrtBox["\[Lambda]"], " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"L", " ", 
     SqrtBox["\[Lambda]"]}], 
    SqrtBox["d"]], "]"}]}]], "Output",
 CellChangeTimes->{{3.910234044930402*^9, 3.9102340652815294`*^9}, 
   3.910234283541933*^9, 3.9102356973513794`*^9, {3.910236379536438*^9, 
   3.9102364029667263`*^9}, {3.9102374451195836`*^9, 3.910237473879096*^9}, 
   3.910241870639761*^9, 3.9102422068861914`*^9, 3.910319657078743*^9, 
   3.9103204792293324`*^9, 3.910341620693353*^9, 3.9103464390378823`*^9, 
   3.9103499889023275`*^9, 3.9103502131963153`*^9, 3.910350274186978*^9, 
   3.9103528948292294`*^9, 3.914562483118944*^9, 3.9145626963816633`*^9, 
   3.915535124628469*^9, 3.9155379257424183`*^9, 3.9155379604602623`*^9, 
   3.915538113894985*^9, 3.915602504270439*^9},
 CellLabel->
  "Out[1213]=",ExpressionUUID->"d9777304-134d-4579-bef0-fb656d10bec7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Coefficient", " ", "matrix", " ", "of", " ", "the", " ", "linear", " ", 
   "system"}], "*)"}]], "Input",
 CellChangeTimes->{{3.910352798209262*^9, 3.910352837312826*^9}, {
  3.922764262962768*^9, 
  3.922764276378661*^9}},ExpressionUUID->"5e4c5023-4327-47c6-98aa-\
7e92a8d760c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"(", 
    RowBox[{"(", GridBox[{
       {"0", "0"},
       {"0", "0"}
      }], ")"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"eq1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "->", "1"}], ",", 
       RowBox[{"c2", "->", "0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"eq1", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "->", "0"}], ",", 
       RowBox[{"c2", "->", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"eq2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "->", "1"}], ",", 
       RowBox[{"c2", "->", "0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"eq2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "->", "0"}], ",", 
       RowBox[{"c2", "->", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "M", "]"}]}], "Input",
 CellChangeTimes->{{3.9102419879252677`*^9, 3.910242018496114*^9}, {
  3.9102421851071205`*^9, 3.9102421851880884`*^9}, {3.910242218759141*^9, 
  3.9102423346003933`*^9}, {3.91032050857802*^9, 3.9103205766476135`*^9}, {
  3.910352849677889*^9, 3.9103529054080825`*^9}, {3.914562703274666*^9, 
  3.914562778290453*^9}},
 CellLabel->
  "In[1214]:=",ExpressionUUID->"a6e1cc3f-cee2-469c-ae4f-d762b2642002"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"L", " ", 
          SqrtBox["\[Lambda]"]}], 
         SqrtBox["d"]], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["d"], " ", 
       SqrtBox["\[Lambda]"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"L", " ", 
          SqrtBox["\[Lambda]"]}], 
         SqrtBox["d"]], "]"}]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9103528762314835`*^9, 3.9103529112402625`*^9, 
  3.9145627825310183`*^9, 3.9155351246511717`*^9, 3.915537905601327*^9, 
  3.915537963702899*^9, 3.915538117768282*^9, 3.915602508483128*^9},
 CellLabel->
  "Out[1219]//MatrixForm=",ExpressionUUID->"0afb37b0-c075-4232-b87b-\
f940b0bc6bd6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.915537890211875*^9},
 NumberMarks->False,ExpressionUUID->"f72cd3ea-9816-4bea-aa81-0e3c7a90d178"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.915537888302897*^9, 
  3.915537888305602*^9}},ExpressionUUID->"7c346680-a799-4e7a-8ccb-\
da7138b24c76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "M", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.9102420198240075`*^9, {3.910242358262648*^9, 3.910242365451599*^9}, {
   3.910319624584625*^9, 3.9103196449979343`*^9}, {3.9103196885699644`*^9, 
   3.910319704298069*^9}, {3.910320223169243*^9, 3.910320223783663*^9}},
 CellLabel->
  "In[1220]:=",ExpressionUUID->"4d8771d6-6a00-42c3-8172-a36172c26bfe"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SqrtBox["d"], " ", 
  SqrtBox["\[Lambda]"], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"L", " ", 
      SqrtBox["\[Lambda]"]}], 
     SqrtBox["d"]], "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.91024202017459*^9, {3.9102421820971036`*^9, 3.9102421911768613`*^9}, {
   3.910242359960619*^9, 3.9102423657795377`*^9}, {3.9103196460446925`*^9, 
   3.9103196623201475`*^9}, {3.910319693101319*^9, 3.910319704846127*^9}, {
   3.910320212290423*^9, 3.910320237510069*^9}, {3.9103206154686193`*^9, 
   3.910320621733468*^9}, 3.9103416295370684`*^9, 3.910346447235897*^9, 
   3.9103500384831*^9, 3.910350221307725*^9, 3.9103502828956165`*^9, 
   3.910352919418556*^9, 3.914562827627454*^9, 3.915535124667644*^9, 
   3.9155378954529057`*^9, 3.915537966820907*^9, 3.915538120864167*^9, 
   3.915602511848344*^9},
 CellLabel->
  "Out[1220]=",ExpressionUUID->"4d5ed5b3-c0a9-454f-82d0-a4489b8bc6e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "We", " ", "have", " ", "a", " ", "null", " ", "eigenvalue", " ", "and", 
    " ", "the", " ", "rest", " ", "given", " ", "by", " ", "the", " ", 
    RowBox[{"eq", ".", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"L", " ", 
        SqrtBox["\[Lambda]"]}], 
       SqrtBox["d"]], "]"}]}]}], "=", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9102425933058267`*^9, 3.910242594021577*^9}, 
   3.910242641751594*^9, {3.910242698328786*^9, 3.910242730250186*^9}, 
   3.910320305305461*^9, {3.9103529285992947`*^9, 3.9103529399063253`*^9}, {
   3.9145628361386013`*^9, 3.914562838480041*^9}, {3.922764289244463*^9, 
   3.9227643097904873`*^9}},ExpressionUUID->"0decb0a3-e875-40cd-9b0d-\
da8850fcb9b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"L", " ", 
       SqrtBox["\[Lambda]"]}], 
      SqrtBox["d"]], "==", 
     RowBox[{"n", "*", "\[Pi]"}]}], ",", "\[Lambda]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.910242738975895*^9, 3.9102427624238143`*^9}, 
   3.9103203221265535`*^9, 3.914562856431587*^9, {3.915537973537171*^9, 
   3.9155379818382683`*^9}, 3.9155381417498503`*^9, {3.915602525503504*^9, 
   3.915602525863118*^9}},
 CellLabel->
  "In[1221]:=",ExpressionUUID->"a09256a5-a11b-4cfb-9c5e-459ae7c3d145"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nongen", 
   "\"There may be values of the parameters for which some or all solutions \
are not valid.\"", 2, 1221, 446, 31520680508193510660, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.915538126421238*^9, 3.915538143668414*^9}, 
   3.915602527540447*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[1221]:=",ExpressionUUID->"e38e3c9b-6aa3-41ee-8a7e-f66a5babcc01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    FractionBox[
     RowBox[{"d", " ", 
      SuperscriptBox["n", "2"], " ", 
      SuperscriptBox["\[Pi]", "2"]}], 
     SuperscriptBox["L", "2"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9102427532549534`*^9, 3.9102427627096176`*^9}, 
   3.910320326386396*^9, 3.9103203619361467`*^9, 3.9103464520611024`*^9, 
   3.9145628594039783`*^9, 3.915535124692333*^9, 3.915537983271059*^9, {
   3.91553812642843*^9, 3.9155381436761513`*^9}, 3.9156025275461893`*^9},
 CellLabel->
  "Out[1221]=",ExpressionUUID->"d62879e7-ee44-4b13-bad3-1685f12df57e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"The", " ", "eigenvalues", " ", "are", " ", "degenerate"}], ";", 
    " ", 
    RowBox[{
    "there", " ", "are", " ", "two", " ", "eigenfunctions", " ", "per", " ", 
     "eigenvalue"}]}], ",", " ", 
   RowBox[{
   "with", " ", "c1", " ", "and", " ", "c2", " ", "being", " ", "free", " ", 
    "parameters"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.910352989619772*^9, 3.910353003088021*^9}, {
  3.9145631285268393`*^9, 3.914563132734428*^9}, {3.9227643386842546`*^9, 
  3.922764348831094*^9}},ExpressionUUID->"7b55a726-a046-4239-858b-\
d2935d4eab32"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "We", " ", "find", " ", "two", " ", "eigenfunctions", " ", "by", " ", 
   "setting", " ", "either", " ", "c1", " ", "or", " ", "c2", " ", "to", " ", 
   "0"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.910353048990445*^9, 3.9103530785801945`*^9}, {
  3.914563179113411*^9, 3.9145631813365726`*^9}, {3.9227643712124643`*^9, 
  3.92276437662052*^9}},ExpressionUUID->"bd251575-b615-4eec-8881-\
8c6608de1953"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]1n", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", "->", 
        FractionBox[
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], "}"}]}], ")"}], "]"}], "/.", 
   RowBox[{"c2", "->", "0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]2n", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", "->", 
        FractionBox[
         RowBox[{"d", " ", 
          SuperscriptBox["n", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         SuperscriptBox["L", "2"]]}], "}"}]}], ")"}], "]"}], "/.", 
   RowBox[{"c1", "->", "0"}]}]}]}], "Input",
 CellChangeTimes->{{3.9102431929852295`*^9, 3.910243305879673*^9}, {
  3.9103490080722275`*^9, 3.91034901138772*^9}, {3.910349130142708*^9, 
  3.910349162037612*^9}, {3.9103505101034174`*^9, 3.910350516875948*^9}, {
  3.9103505651990557`*^9, 3.9103505943153825`*^9}, {3.914563209196095*^9, 
  3.914563257874703*^9}, {3.914563651673221*^9, 3.914563655157074*^9}, {
  3.914563685630642*^9, 3.914563688886504*^9}, {3.915602584609885*^9, 
  3.915602586343328*^9}},
 CellLabel->
  "In[1223]:=",ExpressionUUID->"68cc7ebc-f4d7-4b14-a890-398202c1d485"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Phi]1n", "[", "x", "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Phi]2n", "[", "x", "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.910243943332488*^9, 3.9102439511473083`*^9}, {
   3.9103209717507453`*^9, 3.910320997984867*^9}, 3.9103505591883183`*^9, {
   3.9103506090426087`*^9, 3.910350622709697*^9}, {3.914563265785247*^9, 
   3.914563283752541*^9}},
 CellLabel->
  "In[1225]:=",ExpressionUUID->"9f424b9b-6fd1-4e6c-9855-46c9fa07f683"],

Cell[BoxData[
 RowBox[{"c1", " ", 
  RowBox[{"Cos", "[", 
   FractionBox[
    RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]], "Output",
 CellChangeTimes->{3.910243952389514*^9, 3.9103209849630837`*^9, 
  3.9103417360772133`*^9, 3.910346575278109*^9, 3.910347257875648*^9, 
  3.910347496399804*^9, 3.9103490263486958`*^9, 3.9103491126308517`*^9, 
  3.9103491644870834`*^9, 3.91035052969585*^9, 3.9103506271769342`*^9, 
  3.9103510731348*^9, 3.910351482776311*^9, 3.914563293404297*^9, 
  3.914563715833743*^9, 3.915535124839789*^9, 3.915538294390458*^9, 
  3.915602594803877*^9},
 CellLabel->
  "Out[1225]=",ExpressionUUID->"8fc874a3-1bfd-4d90-aefc-3fc3fe9fb48e"],

Cell[BoxData[
 RowBox[{"c2", " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}]}]], "Output",
 CellChangeTimes->{3.910243952389514*^9, 3.9103209849630837`*^9, 
  3.9103417360772133`*^9, 3.910346575278109*^9, 3.910347257875648*^9, 
  3.910347496399804*^9, 3.9103490263486958`*^9, 3.9103491126308517`*^9, 
  3.9103491644870834`*^9, 3.91035052969585*^9, 3.9103506271769342`*^9, 
  3.9103510731348*^9, 3.910351482776311*^9, 3.914563293404297*^9, 
  3.914563715833743*^9, 3.915535124839789*^9, 3.915538294390458*^9, 
  3.915602594817651*^9},
 CellLabel->
  "Out[1226]=",ExpressionUUID->"360499f8-2c15-4370-9125-5ac3cbb13607"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "We", " ", "uniquely", " ", "determine", " ", "the", " ", "first", " ", 
   "eigenfunction", " ", "by", " ", "normalizing", " ", "it"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.910353087687317*^9, 3.9103531058260937`*^9}, {
  3.9227643861672897`*^9, 
  3.922764417030973*^9}},ExpressionUUID->"a8dc53ba-d698-42ea-b272-\
512eebc3ba76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Phi]1n", "[", "x", "]"}], ")"}], "2"], 
    RowBox[{"Pst", "[", "x", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.910243307776945*^9, 3.910243354997459*^9}, {
  3.910321012599782*^9, 3.9103210366824174`*^9}, {3.910321074226638*^9, 
  3.910321074557685*^9}, {3.910341968871741*^9, 3.910341977096533*^9}, {
  3.910346037147169*^9, 3.9103461402777166`*^9}, {3.9103466868964434`*^9, 
  3.910346767329661*^9}, {3.910346829021475*^9, 3.9103468303307714`*^9}, {
  3.91034689678368*^9, 3.9103469090909557`*^9}, {3.9103475137314487`*^9, 
  3.91034753869901*^9}, {3.910350653572865*^9, 3.91035069091226*^9}, {
  3.9145637342712107`*^9, 3.914563755943874*^9}},
 CellLabel->
  "In[1227]:=",ExpressionUUID->"c111e823-8c3d-4ac1-babd-190aba735257"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["c1", "2"], " ", 
  SuperscriptBox["L", "2"]}]], "Output",
 CellChangeTimes->{
  3.9102433286208363`*^9, 3.910243387077173*^9, 3.910321073217506*^9, 
   3.9103211086000986`*^9, 3.9103211792137065`*^9, {3.9103419143476954`*^9, 
   3.9103419402943554`*^9}, 3.9103422172116814`*^9, {3.910346069066203*^9, 
   3.910346083801627*^9}, {3.91034611941647*^9, 3.910346123536337*^9}, {
   3.910346804983529*^9, 3.9103468371818447`*^9}, 3.910346910996991*^9, 
   3.9103474487232714`*^9, 3.9103479660380044`*^9, 3.9103506640725007`*^9, 
   3.9103507027720118`*^9, 3.9103508074418283`*^9, 3.910351488684475*^9, 
   3.9145637578394127`*^9, 3.915535125213414*^9, 3.9155382972628613`*^9, 
   3.915602609762209*^9},
 CellLabel->
  "Out[1227]=",ExpressionUUID->"942a28b5-cff6-4a35-933f-c0251faab682"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solc4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox["L", "2"]}], "==", "1"}], ",", "c1"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9103508106768813`*^9, 3.910350845580881*^9}, {
  3.914563775651074*^9, 3.914563785349823*^9}},
 CellLabel->
  "In[1228]:=",ExpressionUUID->"f3fd4e0b-083b-4d73-a759-ce1a0e370b72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        SqrtBox["2"], " ", "L"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c1", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       SqrtBox["2"], " ", "L"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9103508180093093`*^9, 3.910350849003338*^9}, 
   3.9103514889714856`*^9, 3.914563785950404*^9, 3.91553512523018*^9, 
   3.915538299535679*^9, 3.915602616676787*^9},
 CellLabel->
  "Out[1228]=",ExpressionUUID->"7fe273a6-6725-4bc9-b786-cfe8bc010b89"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]1f", "[", "x_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[Phi]1n", "[", "x", "]"}], "/.", 
    RowBox[{"solc4", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9103508522192636`*^9, 3.9103508622862034`*^9}, {
  3.9103509148824883`*^9, 3.910350976367883*^9}, {3.910351086788731*^9, 
  3.910351125531993*^9}, {3.914563797674268*^9, 3.914563811381991*^9}, {
  3.914563845978765*^9, 3.914563846307431*^9}},
 CellLabel->
  "In[1229]:=",ExpressionUUID->"803f5e1a-a8c3-4258-a760-990d4332dfc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[Phi]1f", "[", "x", "]"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"n", ">", "0"}], ",", 
       RowBox[{"L", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9103509785512266`*^9, 3.910350985034246*^9}, {
  3.91456381627549*^9, 3.914563822698468*^9}},
 CellLabel->
  "In[1230]:=",ExpressionUUID->"900b7689-15d5-4761-a33c-299102ac75be"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Cos", "[", 
   FractionBox[
    RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}], 
  RowBox[{
   SqrtBox["2"], " ", "L"}]]], "Output",
 CellChangeTimes->{
  3.9103509865189495`*^9, 3.9103511312318773`*^9, 3.91035149654659*^9, {
   3.914563827811146*^9, 3.914563850165545*^9}, 3.91553512525394*^9, 
   3.915538311863763*^9, 3.915602626440227*^9},
 CellLabel->
  "Out[1230]=",ExpressionUUID->"f6968f0d-96b9-4e31-b7a5-7f2f87d1f68a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Same", " ", "for", " ", "the", " ", "second", " ", "one"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.91035312489857*^9, 3.910353125510081*^9}, {
  3.922764422133359*^9, 
  3.922764425528932*^9}},ExpressionUUID->"2ea4019d-a1e1-48f5-872a-\
e3bd3c48d617"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Phi]2n", "[", "x", "]"}], ")"}], "2"], 
    RowBox[{"Pst", "[", "x", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.910243307776945*^9, 3.910243354997459*^9}, {
  3.910321012599782*^9, 3.9103210366824174`*^9}, {3.910321074226638*^9, 
  3.910321074557685*^9}, {3.910341968871741*^9, 3.910341977096533*^9}, {
  3.910346037147169*^9, 3.9103461402777166`*^9}, {3.9103466868964434`*^9, 
  3.910346767329661*^9}, {3.910346829021475*^9, 3.9103468303307714`*^9}, {
  3.91034689678368*^9, 3.9103469090909557`*^9}, {3.9103475137314487`*^9, 
  3.91034753869901*^9}, {3.910350653572865*^9, 3.91035069091226*^9}, {
  3.910351219658842*^9, 3.910351221723957*^9}, {3.914563865959353*^9, 
  3.9145638849693623`*^9}},
 CellLabel->
  "In[1231]:=",ExpressionUUID->"e6492190-6062-4e6d-be6c-56e6ee3c8a4c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["c2", "2"], " ", 
  SuperscriptBox["L", "2"]}]], "Output",
 CellChangeTimes->{
  3.9102433286208363`*^9, 3.910243387077173*^9, 3.910321073217506*^9, 
   3.9103211086000986`*^9, 3.9103211792137065`*^9, {3.9103419143476954`*^9, 
   3.9103419402943554`*^9}, 3.9103422172116814`*^9, {3.910346069066203*^9, 
   3.910346083801627*^9}, {3.91034611941647*^9, 3.910346123536337*^9}, {
   3.910346804983529*^9, 3.9103468371818447`*^9}, 3.910346910996991*^9, 
   3.9103474487232714`*^9, 3.9103479660380044`*^9, 3.9103506640725007`*^9, 
   3.9103507027720118`*^9, 3.9103508074418283`*^9, 3.910351233440808*^9, 
   3.910351504211961*^9, 3.914563886178344*^9, 3.915535125502667*^9, 
   3.9155383163710423`*^9, 3.915602636923065*^9},
 CellLabel->
  "Out[1231]=",ExpressionUUID->"61274dc1-5bb8-4b87-8ec4-b905506de0a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solc3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["c2", "2"], " ", 
        SuperscriptBox["L", "2"]}], "==", "1"}], ",", "c2"}], "]"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"L", ">", "0"}], ",", 
       RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9103508106768813`*^9, 3.910350845580881*^9}, {
  3.9103512296007595`*^9, 3.9103512888178425`*^9}, {3.9145639045244923`*^9, 
  3.914563916043029*^9}},
 CellLabel->
  "In[1232]:=",ExpressionUUID->"83fa193c-5eaf-4fe3-8dc8-2085e9ae0dc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c2", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        SqrtBox["2"], " ", "L"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c2", "\[Rule]", 
     FractionBox["1", 
      RowBox[{
       SqrtBox["2"], " ", "L"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9103508180093093`*^9, 3.910350849003338*^9}, 
   3.9103512447374487`*^9, {3.9103512765268526`*^9, 3.9103512896318808`*^9}, 
   3.910351505463418*^9, 3.9145639191468573`*^9, 3.915535125520179*^9, 
   3.915538318503481*^9, 3.915602638830193*^9},
 CellLabel->
  "Out[1232]=",ExpressionUUID->"dab620e0-5b11-4db8-860a-517871994190"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]2f", "[", "x_", "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"\[Phi]2n", "[", "x", "]"}], "/.", 
     RowBox[{"solc3", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9103508522192636`*^9, 3.9103508622862034`*^9}, {
  3.9103509148824883`*^9, 3.910350976367883*^9}, {3.910351086788731*^9, 
  3.910351125531993*^9}, {3.910351292581382*^9, 3.910351309929625*^9}, {
  3.914563927271964*^9, 3.914563939694652*^9}},
 CellLabel->
  "In[1234]:=",ExpressionUUID->"670acfcf-4a48-4a53-99ff-019105ccbaf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"\[Phi]2f", "[", "x", "]"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"n", ">", "0"}], ",", 
       RowBox[{"L", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9103509785512266`*^9, 3.910350985034246*^9}, {
  3.910351316046082*^9, 3.9103513172626486`*^9}, {3.9145639461989193`*^9, 
  3.914563954624834*^9}},
 CellLabel->
  "In[1235]:=",ExpressionUUID->"3f4d4482-577f-4fcd-bd76-0b36cbfa3bc8"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"n", " ", "\[Pi]", " ", "x"}], "L"], "]"}], 
  RowBox[{
   SqrtBox["2"], " ", "L"}]]], "Output",
 CellChangeTimes->{3.9103513209398594`*^9, 3.9103515147137814`*^9, 
  3.9145639567979403`*^9, 3.915535125574315*^9, 3.915538323414235*^9, 
  3.915602667006078*^9},
 CellLabel->
  "Out[1235]=",ExpressionUUID->"45bf7de0-d719-481f-92e7-ad9a57f39ecd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Checking", " ", "orthogonality"}], "*)"}]], "Input",
 CellChangeTimes->{{3.91035324093772*^9, 3.9103532535427217`*^9}, {
  3.922764432152322*^9, 
  3.922764437899097*^9}},ExpressionUUID->"84abf08b-c4a3-4f53-86c0-\
32965d786085"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Phi]1f", "[", "x", "]"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"\[Phi]2f", "[", "x", "]"}], ")"}]}], 
    RowBox[{"Pst", "[", "x", "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", "1"}], "]"}], "==", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9103513884848423`*^9, 3.9103514347946978`*^9}, {
  3.9145639637838097`*^9, 3.914563985582053*^9}},
 CellLabel->
  "In[1236]:=",ExpressionUUID->"ea7fde95-5d40-4c40-9f56-927dd8250644"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9103514000161543`*^9, 3.910351443231914*^9, 
  3.910351542458764*^9, 3.914563987200856*^9, 3.915535125767458*^9, 
  3.915538327531631*^9, 3.915602673794858*^9},
 CellLabel->
  "Out[1236]=",ExpressionUUID->"ba7f5e46-c50e-454f-80f0-36e5928ee7a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", " ", "the", " ", "eigenfunctions"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9103534463824015`*^9, 3.910353452979542*^9}, {
  3.922764450161797*^9, 
  3.922764457198512*^9}},ExpressionUUID->"5466d692-741e-431c-adf7-\
a93eb4788482"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]1f", "[", "x", "]"}], ",", 
       RowBox[{"\[Phi]2f", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9103524584036922`*^9, 3.9103525557399054`*^9}, {
  3.910352632782454*^9, 3.9103526342528887`*^9}, {3.914564044096342*^9, 
  3.9145640695320873`*^9}},
 CellLabel->
  "In[1237]:=",ExpressionUUID->"0eed277e-964f-4373-9b2a-6e14effe7a24"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
B/0/Fv4Izw==
       "]]},
     Annotation[#, "Charting`Private`Tag$7100065#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
w/vIDjh9s0GiLaUfh+ZqzIRmauFZITPi5cU+/DW06YN02DvI75Va9Vb8O9Ye
OtZZfr0Yt/BraR+P6Uba/b9/ZXubMES+3+vik250GX1RvWtlM04b+X+8GdSN
aYtnCyR3N2Pt4zKJd27duOmf6f7ykGZ0Fzi8fJluN95bdMX8994WLBc0rs0Z
60LpQWHusaeteHGTndl/+7rQrl3y3LBCB7ZocD5SUOlCKa/Xf9ssO1DTJqlC
V7oLVW/JRifd7kCBWLaq+7oudK8U1vnZ0oEFok7/1Q12YqfMh/Vynp3IK+HZ
5xvWid8Wfbsg8bELP+wIujhA78AV+p76+et6UKTxVJ50ZweecAwsF1PvweCr
ais86jvwyl/B4Qs2PXiubOj18rwObG+zevIsqQc32Bj0y4R04OetwZx2u76j
z+M15ldVO/BpUdPqj/q9eGj65cFVD9tROWVM925mH2bHeDw19W9Hie0jSqHF
fSh+0JAec7UdT3hffX6H1od/Hy/cVDjTjsxVb333jPdhuvSZArPd7RhJpBml
sv241nab0qv+NuS7x8upRcWp9+t7URWVNoxyu1zjGjyAN0xmDqjKtKFG/EZV
kRcDuKFfy0FdvA2PGT7E/NcDaDTX8F6Ttw3j+Y6Nfi4awGLFUW1d0ordmmxv
5tgAxsXuOGce3or1PHrragzpuHen2z3L4FYssf6UeNySjh35ee9O+rfiqViO
ZzXn6Mjfduj3qcutuPOLqOOtG3S8tcr+roNOK4ZzCZetfEPHM9cT3nj9bsE2
/b6mx/N0nF82XHdjpAXD3s1cGlnBwMinir98B1pwPdevQiUBBjZlfFG/Xd+C
9pmLzwVtY+B+0lvzIKkFH6YcyTh0lIESJsKjL81akG6jOiYcxUCmzDNF/NSM
Uzmera1bmLjD9/UoO60ZlbttLtvKMPFyQ3bqmlfNuEi8m69RmYnTrm3i5x80
Y5iwi47jQSZy56wX4DnVjLxZIj63zjFRfl/khCVXMzp1D2uLvGKiR1hqRsB8
Ey6q7tu6NYWJ+fT8S+kTTWikbBS4JoOJ++900xd9b8IVS6wjEwqYaFYj3JLy
oQlXj14/FNNG9RnT2KzfVk0YqJR/cYyTYHFShovosSa0PnvptcNKgkunUUZP
pwm37FQfqeYnGBLZlxgt34Txf8YDtf8jGNcr9uwAZxMW/lTR4ZQjyJRXPHZ5
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
jzmBuQv4///fhf///27R/wHPvupL
       "]]},
     Annotation[#, "Charting`Private`Tag$7100065#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.910352464205237*^9, 3.910352529281664*^9}, 
   3.9103525625146646`*^9, 3.9103526405763407`*^9, 3.914564072236485*^9, 
   3.915535126993806*^9, 3.9155383314372473`*^9, 3.915602681749435*^9},
 CellLabel->
  "Out[1240]=",ExpressionUUID->"c44050b7-3bfe-4e1f-ac6c-297e17f048df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Computing", " ", "the", " ", "transition", " ", "probabilities"}],
    "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.914512473677231*^9, 3.914512485173997*^9}, {
  3.92276446892775*^9, 
  3.922764475934957*^9}},ExpressionUUID->"27e1d987-67fb-4325-8f6e-\
a4e5361cdf3d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1v", "[", "x0_", "]"}], ":=", 
  FractionBox[
   RowBox[{"\[Phi]1f", "[", "x0", "]"}], 
   RowBox[{"Pst", "[", "x0", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2v", "[", "x0_", "]"}], ":=", 
  FractionBox[
   RowBox[{"\[Phi]2f", "[", "x0", "]"}], 
   RowBox[{"Pst", "[", "x0", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ncut", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Pst", "[", "x", "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"c1v", "[", "x0", "]"}], "*", 
       RowBox[{"\[Phi]1f", "[", "x", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "ncut"}], "}"}]}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"c2v", "[", "x0", "]"}], "*", 
       RowBox[{"\[Phi]2f", "[", "x", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "ncut"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "25"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.915534836044223*^9, 3.91553489456779*^9}, {
  3.915534962698476*^9, 3.915534964902233*^9}, {3.9155349977544394`*^9, 
  3.915535002026875*^9}},
 CellLabel->
  "In[1241]:=",ExpressionUUID->"4be0d36b-8a77-4d24-aa0a-1ebda0546787"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81d8f9o1ECZFRZIcke5TSUSEhK4mSlUqDjEKKNEiSkISQEgmJKNvb
zt7rXnff63K5RtIg4/f5/XVfz+s557zH557zvB9Zjxt2FzdwcHBE8HBw/P9X
DYlOra/PgZzTtaINHBR0Y0k+aml5DtI6pTlDUymoqERT8eevOZiI2S/Op0ZF
P7xRE3t+DuzEv78JrqQiLeWTHszpOVhkrR2IRTQUQDvLQWHOwVTNo2iJGhoq
TfPKwFHnoLHmofmCFh3pb3uE7xyZA8eY2c5+bgYK7ogPbumfg/k8j7XnngxU
GfFGtK5rDnZ+SEherWCgf+hTaUXrHIhfm3y3yj2ODi1X2pU0zoHVx6antyzG
UWhp63xBLZbvnIem1eNxVOszHJtTMQdbx8+zAirH0boyQzWzdA6oJn2Rw4xx
ZET/0Z7yeQ4SpsRcr3Az0f30da8XeXPgmaZwUl6aiRrObN30LHsOfARvlayp
MRGnkER2ZCZW73jG3SVdJjLuVD4W/noOlsWDdoroMFFEpB71dtIczM4PPnTY
w0QtRsb3AuLnQGj4h0aLCBPx/LPd5R0zB++Pe4n6Lo2jE19dqy49xvrjNZhx
YXAcRd/wdnJ7MAejnjuySnLGUeeeO3+cQueg1dLaPdB3HG1lRL08FTwHX1LP
+zdrjiOrjCTtkwFzYC95vLZmioGeO77vM/WZg2cBqjfuvWagXqEvN4yuYPlR
N9P3GTOQ3eOufG3XOQi0aNWYDaWjF0fGTuw7Owdx3X77HQToaPDf5ITi6TlQ
21x24EwKDTn4cinstJgD/UYf//lXVPRKRahB2HQOVI08s3/xUdEoQ9pt65E5
cJiyeu19h4LOOR1M49Cfg0NHXneeeUpCacInDJY154DkneHAPEZEpC6H0Z+q
c8C1tb/q/I8x5HbUf/uEHNZvrTwFg3045Ln3Y0wX/xy8dth2jbR/AGWPf1P5
zjsH92Qtxtpy+xDzTVNrHdccnGFI3z0v1IuubKdwlS7PwprxmKt8XhvyWRUN
TWXOwt0u203+BeUoqOeR9+XaWTB+nZ1BQzUQMx04slg+C0fT1dPvaTXAu01X
jjwomQWzA8NHRiqboROdFEnPnQXbxVvLrjmdQDuH7qlkzcLBpdPSGpy98CdI
k1WWPgvzhdqjjLw+kCsSqelPmIXJQVXry6RB2N+5Scnt2SwYEBiBtV7DcHJy
KW7m8Sx0y5Z8IU6MQLAMyZMndBZ6eFt3N9TjIfZQb/fLoFkYne3VNpQgQJZj
w355/1nYOFv7in2JCN1xOXyHL8+CI0cfd1o/GRgFyYEd7rPAu5zf3hhMgaXW
aIqjMxbvn18o4qAC//hdc6bDLFjZ+Z+LuEcFhf9ulAbYzoLPP0g8/5sKBrvc
pf6znAVi/QaPRE8aWB84FRVrOgvhM807l9to4HnaZEHiyCycDe8/cUGRDiF+
+s4fD87CnSsxkHubDnHP9rTo6c0Ck8fi3YdGOmR/lNBo0piFOJecu0e4GFDZ
vDXVdi9Wj3DJCeeDDOilrnOSd88CX6HyPZoXA5irP7yvy8xCr7CPSGMMA/7t
YIws7cTOe/7k2Y8cBgjqDR95LDILX6IWFi+WMUDRrjV/u+AsHOM3npCsZcAh
n0qRd5tnYZtD7zOxKgbYRhfcU984C0WnRNPPFTLgUk4Gq3p9Bj7fkbD5+YoB
dxviTpkvz0Bta4H7TBADEkgPakYWZ6CZ4ynneSsGfFi+qXRxbgZszB8POEkw
oFr0cvwCawZ2z7/sXifRoV/L6d89xgysGJKO3Eihw6SVxcWt5Bk4btRT0WlO
h9Wrhj2puBl4v+3onNFPGgg9Vj+gPDgDfxxKvvxNoIFylmzW1+4ZmDubMaSg
QgNDEN56rG0GlrdtFFoup4Ld2Mag3sYZuKmiOV+EqBAqPGU+XT4DfJzjguW6
FEhQJ5QGl8xATG5ht6gFGXItuqW4C7H9LRmxMZIk6H/4ZUEmawaiIyvqDrwa
A+XFkFSHZzPwcfL5do3VITgs6M3FeDwDrh1Zbl/vDsIpVVcfvwcz8DPzv2qj
n/0Q5nnsaEzQDIgf/qdaEdcDg4NbpurdsX5kK4ty2DTAfc+vtfnOM2C0W0LB
73gtqC26vHh5ZgYSxUmePxhlECX85dCVkzNQVyX4c/+OHDC0c3wueGAGil55
nYq1/oSmqP95LmvPwP5LAv3O3F9Rsl/+foYatt/5/t4Fpyq0ELdGLVOYgQ3b
IibmphpRTs97HVfBGbC72Cl9YaYHnXK14j2xZQbeFJbbd1/qQxxzf4ha3DOQ
qpevY9LTj87yWzzmXmFDf2U0mfPxENqUsXhu/jcbdtRt2qY3NIxK92Vo4H+w
4cgOdvKrHaNI4OQP3KcJNuhJL4hOPcCjakJq4SsaG6brj0wzc8bQ1evGD+8T
2VDBa6W1Fwio6ekr1dMDbLB/85Ex3E5CfhJH/kPdbCAreL/zqyEjqfypIeU2
NqjIZV84b0tBwe2G91Zq2fBd6sujVVkq2n124hSzgg2J5dI/cu9RUT8rTrm3
lA0Hcg5e2zJMRfduG6xWfGbDFt57tly7aUiVl9GXlceGKf41ocDrNIRLfpbz
LJsN/109bWBaQEORyvp3gjKx8zfaBp1n0JBOOcXa/TUblGPMPnzYTkfU49EK
FklseNWsRhA2pKPYEe0lnXg2qAbYeiSep6NDl4ldUjFsYH773iQVSEes35Hv
eB6zYbb5WW9+JB0lRWoELdxng+Omk0n6z+nomCjegnCXDdev9l6tx/B89kOZ
liA2HNu3m2kRRUfpuvt+ffZnQ9uCF5UQTEfmzcNtKd5sEPc3DQh1p6M/9uEZ
D73YwJ0vN33gKB29Z+wJ8L7AhqQNq+2yEnRkd3Pg+BkXNhirb6w7zqahdc5Q
ySNObKDdnkqp/0pDBS8Uf6jYsyFKddIoN4iGzsr3Nm+3ZsMkvMgT06KhTSW3
U9dOsGEh369LbZyKSo/K35g0ZkO3o8MLgXgqcu/vPNaPsH4KpbSTdKmI3yNQ
vNqADWM+0qJNAxTkdb+t/rkGGx4JBV1Z/k1GItsCkm7vZUOvv1PeuS1k1JAp
ee2CIpa/keTyOWES2lV3Y7u+JBukvjJkGetjqFNI96aBGBucX24LWJjCo5CL
ywOGQmww4Cfdae3AoeHNES+MedhwqOTf9Te+IyjudKqQ3eI02Ln8xxtp3484
p5sEvTunwebDi4ax6Sr0xTDa1/f7NIgnLbZsXfuK3OKsewMaMH5nn3w4bxGq
1sU/DymfBo3wvEophzgUGD7HH/V+Gg7tOyujVl0CLJGdW7PuTsNsad36O6Ne
SPYiX88JmoYrIXe9B+P7wLTqfedH/2lYDPOx+zbWD+/c1GOKvKahIuOmaMKZ
IbApWZwuuTANm6+s3HoVNQzrGystylymYe8r3XzPohFwzjfeUms/Df0j869f
0nCweY33Wr31NBzs/tojx8ZDhU1Pe5P5NMR0Kkp0TI2B6G+n6A6jaYh4Pi8+
10yEJjPpqe6D09DLd9Sm7C0J/F8zTvTrTUPBtddsbT8y9Bjd4MWpTsOg4DET
vlsUCHuhc4WgNA2WBQZ7QtoooMpcaiXLTcO51WVpPTEq4PeDMn3XNOx+a/hR
3oUKUU8fRTHFp4EQ/+mPcgYV9EgnJlnC06CUqrmsNkKFcQ0Bsxn+aZAslvOU
5aVB4sPBD/O80+Bte610VpsGR4dTNi1yTYOa57ODUWdoMK/sevnP+hRAXowM
LYAGb+4ofF9engJlkWrPn1E0sOpmKa79moIo2nXm1yQarMh8jvzvxxTYNIZ5
KKbTIC/gJpOLPQWjjb03jdNo4NhywJRnYgq8drx4JZRIA+4d69lbaFOA9wuR
TXpEg6/XmjYKEKeA0jh0dMSbBvtlfDRzRqbgl62g54aTNKgcFDtv2D8FGRzb
4uvlMT15Uh812DkFG6JkAlUWqFBneK302vcpCHl4M84B05ejC9spGxqmgMRj
KnshkArNObVbUqunQMpBU9pPlQpm57z0NcumQKh/fHc2ngLtAkIXWounoNJF
zVPpPgVONlXFuhZMAbvqbJS8DAV6gy9W/s6ZgswpRYf4G2QYopZv2502BaVX
goq/ZhHBMcnDsDppClI73ny8/pEAeHO+K6fipyBUY35J7d0YUEpc6+5HTkGr
cgh/nw8OPLx42eL3p0Bao9ms+tgojEuWiBXdmQKrmSWztq0jMBXBfYPki+Xb
Kpaa9HAQfp35tOvguSlgVO2YkOXvhs0ryyGL6lOQnNEQ2MyTC8+K3uc8VZkC
o+KAtATzVyB40apfbvcUcMRE862sn0Ei3W/32O7E+MaCCNHbH5FMptnoJ64p
iLmpeyX9fgN6Z7/AabLOAsmiU0Xugc1oN2+aOmGJBSGmx8DDrRWp+M9Fbp5j
AXdKfG4HfzfSNU7SvYxjwdFQP6kax0FU/he5rw2wgPQs8JRc0hAy+MSKednN
glEz4NBpG0ZGooaMxkYWlOkMW+jx41BDO1PgXC0LDjPje2Wk8cjkXtzBhXIW
/PXds61AfgyZT9ITZApZcHUo+uDIRiLqSntWW5bLgsR3JXlvaERkY6s/ZZXF
Ak9rK6OzxSTUv5EqwkxnQccfQed8PzI6XRl9JDSZBSe8q7e+2UZBoz463ttf
sOBQUQSieVCw95SUnP+MBWecNFvuFFAQceRx09EoFghk3PlmMUtBbjGa87gH
LFA429mkq0xFIaUJkV2hLKioV3vPd4aKXhJ+StYHs+D9StrEWBgVFXGdLikN
YIHPB0XLl2+oqF3124lcH6w/MV1X91VQEcNejPL6Cgvq9l+oft1BRWt3gwOf
e2LxtqA0PKaH4tk4voeu2HpKx4kJPBVpdxlkBZ5lQaXAzGT9CBVZ/Xp94Opp
FiQNGtz37qIir12rPedtWCBcLboyV0VFD0xcLtlasEBUMkXWLouK0rxhxdiU
BWayTolvHlLRt5cyL/YfYUGY+7ZOpjMV9dXc36N6iAWPzssLHFCnIvY4DaT1
WRDZv3I1b5mCuPmNHYS1WJCg5JFvCxQko5fN5t6H1V/21sYslIIOunA/XFZi
Qa9c6aM8HQpyiLy8Y1aOBXFP0qTUOsjIt7D1M3UXC/jSBuJdZMgoeniP6ZA4
C2oXX+xQu0JC79eiCa3CLMg9w2XPyiYinNVJ3iJeFtgcDJfyXhlDi4GFb7K4
WDB5J9uMKTqG+N8I6L1anwRfqa+CBYp4dHSuzyPs1yQcMnXgK1QaRQXPHaot
qZMQd79e3qlqALWUldkZESZh84HHuPGn/YhKFmdpj0yCTeLPNXS6D4lqjIlI
dE0C22yDYkluF7rX63qDVT4JqlYrcvK7G5HdtitykXGT4FbLPssT9gquH2gv
v/10EjJjhY8LjubAY/e91t6RkzC6QS6pcqEIqotn7tjfnQTlvNobbeNVsNvO
f0jOaxJ4bDt6WhNawShk4JrohUlYrnjYqi/fAWff6WzY7DIJl5T1LqnkdkHs
wm+1H6cmYdOe29zdJn3wN+FOFKBJSNbu3vivewgmJOunTA0mYUPVkz+sH8Mw
nMN9sltnEsZuHnhQxTsKJZXx24h7JiFbX8Jvoyge3hmPBHgqTELOvGniU94x
zOdKDk9LTcLlYbKh4PwY+NA+pC4LTwKvk1ZzQCIRnK/PrNznn4T3Jls0EmxJ
YPFby5WXdxIWXC1eqHGQwSA8uD6OcxJ2POT+svSGDMqba+XF1yagw07n82lx
Coglcka++TsBeGehk/85UYBb6sSk4s8JsIiqwdHiKbD4Ida8cGYCNJQvqlMb
KEDXHCzQnZyATTRrJnOaAv1VOwRqaBNw94uUC40Pe89NXP2MiROQNWba3Lyb
Cp973g90jExA/2uQeqxHhQynKd1T/ROg6k41kcH8QwxdPRnfOQE9227Nx2L4
jvetZffvE4D6FgoH9alw9U+lM6t+AmKi56d+K1HB8T4H+FZPwIJzPX1NgArH
t5jK/v02AcGM4x+X5iig9/Lpw3vFWD5aa9v/fqeAgnTfOHfBBDSI69fzJ1NA
+KOoWWzOBPAfT1877UaBDdrOeSJvJyDx/q/vLEwv5qvf8qW/ngAJLXuvgRIy
kE0nfBSSJiCP92TXD1EydPeq9uXHTUDtZ5GVO9dIUH3WX1v76QR83H5vQ0sx
EfIZZS8rIybgUvz4S5UpAkT9PXq2LQTLt2NnQLfWGAQ9iKq2uTUBlkrWfbRj
eLjE1y01emMCKqOdwqrMcHBMxonO9JyAyx3L1Cz1EdDKyzDxcZ2ACPuNW74J
DYOMDuPDL6cJYNgRp+OmB2Ht+I3rXNYTEJdvZDMW3g/lNyJ+yR6YgN4np/We
JrbDh6X2Mx+1J8CGw+HT8sh3SHooWKmhNgGOwtHmnwSbIeDV6zAkPwFuxpp5
tt2YX4LiTee3TkBdiENgt38GZPGTdiRTmVDtWqtw27QRJZxDmw4QmJBMuDjF
XGtGD3IzF3HDTLg+L3G/s6AVeRy90CPRyQS+29zb9jK6kN3zpurqFiaQTuww
eK/bi44Sduedr2eCZKRaywu/PiQXOPnozTcmfByZsHDtHUBCjSf8jYqZUFfS
u75nYRBtEMx3peYzYQvPzVDtzcOI9tHbQP4tEx7Met0WlBhF/b+7lZpeM2HP
pp2k30KYPh3TELmYxISVXwbHjq7j0DviwlzOUyZIJSq7Xy4ZQwkq9sTjkUyo
FdrdGhZCQA+CvrZPhjOhRcOAFqhDRP5NouVP7jBh0XnVbJVCRB7bgrNVApnQ
9jmrvvkeCdm54BI6fJlQSX7uEi1IRkfzDcKvX2PCwey19C0vyEjr72vvrZeY
8FuCdjSKk4JkTVbPFroxQe7yJhdtPQoSTHAxsz6H5Vccb+XnTkHYFdWdP80E
k7qNH9QjKGh+r6x8vA0TFFZFLrm+pSBK8ANBLQsmlEmQVxa/UlBvM32134QJ
6xdenJpsoKA6IZPpACMmBPYkdOq0UlCRa87o9oNMiB6eNcE1U1BmwaaWr7pM
mLrjtGO0ioLilrxKHDSYsJ11b6d+HgWFm7Zn/lHB6k3oe7EeR0G+L/bGJu/G
8n//9chhX0xPKTF3DshgvIymJacZBdnsm/XC72TC/j4O5CFOQUYh1g53RJiQ
2nKag9FARhrfi45JCjKhwG1HdIopGUlvF9Ks2YzV0zuwRaaahPjdA6RcNjKB
8XsjpVyehNY+DW5ZXx/H5h//gvxQIppd1l16szwOK1rxRqbtBEQ6/opp9Avj
dxzwI/ASUHfi3wHq3Dg8+pH84/uhMVRLdap/MDUOLVee7PG6gEcZdyTTmsgY
Hz+Jd302imJbQ59cxI+DcgpNMD5+BIWJkAO5h8ZBz+6PkMrTYeTy+a2tWTvG
G+3MvOs2iHbRFTd1lo4Dj66ND+tYD+LTiFq8/nkcFjfsUFaATrRyl0XdmjcO
BDlVh/f72hFBtKDa+s04cD1vTlNnNaE0c03/gSfj4CX36pLQUglS2GLe3vto
HDQyj3b6Pv+E8js85LrvjYPNtgJJb7ksVGmZ2N96axw4CFdfFbpeB5zVH61a
93EY/Xbs9b7Cr+AmIPi0ynkcMsX/qJO7K2GyR5lefmYcxG0i4xED4K/N2Rcl
J8dhexg+59FCE4ieqvmZewCLp2SlvfFRN2QID1vk6GBYLmN95GIv7B6czcpS
x+LzpytyP+wDndMy9hm7sXx5X0wVfhiAapEDBa9lxmGhnXvRtnAQjg3bcqVI
jMPNXz+nMwqGwO7Mw9IX28YhasfTQ/mxI4AXS+OL5xuH38f1vn/yGwX30VLP
2E3j4KApMUsxx8Fkclf10w3jQCbSBud24MHXibn9ySoDDime+fSEhIe/O9av
R/5lwBujwWH35DEIx4s1P/zJAGUVwRX14wR4fu7ErTAWAzbt38SV9YCIzUke
XXcYDFCTbcjt4idBBiFk920yA+gmN1eWYkmgmP4iNBDPgBDmetbvDWQoPF8w
FDDEANE/G3a9ukoGPanmfX69DNjxbqy7pJkMNSRihE8HAzy3EflENlPA+M1v
4rUWBvSoEjVnVSjQ6Sqgd6WeAfECHEJOJhSwl1GOvVTNAA5h1i8LTC/HKEbM
C2UM+CE8+g0uUcDjrdNh9y8MGCBo1H/2psCUu3+SyycGmHGviez0oYC/3NPZ
c7kMKOjzsVi/TIElWpapUxYDPNjWMR7nKBCeVZ3hkMGA6Rv3kk6YUYDHc+j3
qRQGFHY5l1erUSBOYdbKNpEB8yO6XS38mH6Pc3+wes6AiHpPv6leMmRkS69b
RGO4PLzhcxAZFC/tP3MiggE5pRtPbRDC+qFo+9k0nAHftj7r25JJAr2JK5uM
7zDAOGa1aVmWBLUfHrgeCWSAQVv67Q3JRDDxel122I8B/m6m7LMbiNCpXCpw
6Dr2fVyrS4zcCWDP6rx84DIDmHyGk4ulY+B5dU1M5zwD1i6mUWkH8cBWEfPV
dGQA/snXK6U3cBAwrd6qdooBblcv5T5MGYUH192D95xgAE18DzOwdxhIsS5p
lccYwPMVPx7WNgQGxefqLA4zYPvaJ4uQ8kFY+HWax0cb6//ckKxtSD+43zNP
/rILO+9vY4T0gQ4wStAuP7hAByMfyHj4KwfSSjUInWwMv57ta//0Cv4O7+Nw
maADh+ODTwqhDlAkoWwWTqBDOPf8vkvR2Ug6W3K0qYUO8ykKpfOn61DI9x0r
p+vpMJoi1a+9oRENs0RlJqroUO799ZR9djOKVdvmxVtMhyiLiDiLjna0Vrbx
78nXdBBPiEyKMehHZ/EbJMkv6WBGOng85dwA+rayjnzj6FAqHooeBAwinyPL
jxMi6GC1oH9wImIYtV/4ky8fToeVkylT3vdGkGLkYk9pCB2Y3Y/ymN6jiNg+
KzZygw5FesHH/ynh0f6Z6YNeV+kQyLto1LGAR4kCLNclTzqsteVTfxWNoXlN
5sNoVzo0tc8XyHsQkKU9/YPEWTrw/Ht0gJObiHIDKR0F9nRgXGQ5nEgjIq4U
4pyhNR1Wh5rVixVIyK0KL9xzgg4yk05XVjJIqJo4ou9mTIcriIV+biYjcY6h
cz8O0yFkQiTT04uMbsr133twgA4nruwyVCwjo17jnixhHWz/09ms7X/ISPVy
5/f3anSYev44m3c7BUU9aZvW3UOHOK9sa+7dFMTIbxH4Lk+HpxkJ3LfVMH3p
btR2lKLDdEEEp4sGBaXN151hidOhp1qG66sKBf0Vqr0TIkyHDd6m5vd3UZC9
btWbLfx0uPjKMrWNB9PDM+WNaTx0EBWSvKGBIyO+kK8T+zjp0NlbUfsrnoy8
0r5sgVUaPHpU9GjjITJqqv2sbvOXBtcZ1n+jRkhIhlpwirpAw/TNRLjIk4Tu
cOYF+c/QYOf71pBiOhH5pLhwu03SYH9O0slvLti8oC788iSdBm7Wbyf6uwjI
ofm7/EESDbYvXlo5qklA5ufuflHG0UDh26s/pk/G0OEfGkdEB2mg0ZNNkx/G
I83H4z2cPTQI97xtJi+OR+IlVjOkJhrENbDDm++OIr4TnHc7gQblDWOjgpkj
aJ1UtrmykgY27+z8eiqGEXOzrPLLImw9a7xFrn8QlXr89LBIo0Ga/OQ267e9
KPfvhx/7X9GAQ7A1NJq7B72OdQ5XTMDwSRfJ1ZpO9KCyOf2/KBrIjB8q19rS
imyFkkfLAmhAyXYx+BNQjWbrD1kpWNDAaDwZ3vblAu3MD8I2U2z/dCWn6YNi
GJrJvrZuRIM672cepxK/QfUOgSd4PRr46p75sG5ZB0/9qI1xcth6yo4L8Utt
ELYpyS5sF8b/4VL2suwE/3Rz6jVxrB//JpvSX3TD2baSNVN+rJ9awhXVoX2g
LBt5YHWJCnziLpsPxAyBZJlB69QiFcTjDiz1hAyDwMk5h9E5Ksh8PPFHz20E
fgc73iwZp8Ijr0ubuPlxMMW/lfMthQqW4fLX6oZwQHxfHx87RgX71eDvcwl4
aOpV+Xyljwq5LONz4ewxKL9ENjzTSQWFe+oaDlEEyF950Wn8nQoF8kW+0eJE
yEgwO6fVgPmUSP0t9DQiJCivsqRr/u9rPOtUREgQWVscvLWcClKNnvs175Mg
xP7Spn9fsHxT7UQ7KCTwmdqZNPmJCsTnL3n7tcngHt6jMJxLhdVgTaJCCBkc
cG8OE7OokOiXWJD9hQzmWr6OjAwqiPjHPqwjkQE9NfKfTsHqo/nneK6RQYch
GLOQiPUnWFOikYcCewyp2UvPsXqjSTsF+CgglVQMHE+p4GtyykSEF/NDc/dx
myKpwC7+tP5pnQw8ZnY/+e9ToRdFHC2ikGE1U26r6F0qRLWNUgy/kmFhaUFx
VxAVln8fPOYVSgamXaORgj8Vwr30ckwOkGEs/8XZvd5UoPHc2PZjkgS9XJ43
tbyoEOaxbBkdQ4Km8zqxBy5QIViod1BXgQQV37hyjVywfntcb5csIkKhwFD9
cScqEDKyGNc1iJDllT1mZU+Fv5GfzjtmEyC5/tav09bY96XdIIsIEOB+gOge
TxMqOE/12/ypx0NgJ/PoNSMq8Bw5s5S+BQ9Xd5c5+x/EfKm0OkvCAgf2I2fi
wjWx+p8/tugpGIETGsp5j1WpYHT8+dYPPcNw+MnfxljMZ44+fBKYyhoC5YMp
f9J2YXjZuRtxDcK/DLxLBS8VMnMjmq1qe2D+T15wHRe2f3Lfq47oLmDY3En4
vk4Bt9p/m9stOqB7g2TL0C8KGH3i5x0obIF3l87vW6BSoC7n0Qnd3ZVgpkb5
p1KJ6X7/Kz/hK/nI8HGRiNZXbP0Ai1Sd/wVpUcLVDxRRgMPfUDb2dRmSSJC9
cDyHApTEhKqCwjo0+8uj/UICxie0FZ/Z2Y7oVtqMq8+w/VL01bnznWj0A+ea
XxSGud02Xk3qRg1O7zXDwzCM6G5mmP96WTOenHYVO29jxqK11xByCU4N07+I
5bfF3fDJxWGkrG3t2e+K4Z0NL/0cR1Blbrk6z2kKyHSZGybtwqGHF7xFsqwp
kGk4FrJhDocspeT+GZpj/KQKV1gpHpFePG0JQFg/VNXmDHcS0AcrowJ+A2z9
TkNBUgUB+fL+iv+og+XzZtXUxJKIDjR9DDJWx9ZL3XLW6COiDfdczpP3YOdV
fjf3MCOhjgPCx0IUsHqN9jq9LyahxMXvyiLSGK//R6eFj4zN83f5i3ZgOLVl
U4YTGSld1Vw0345hybfRPMlkNK/AxI1jcxPHUXlR1ncyqiCnQjh2DzhI6Z/3
sMjoQap1tgQXls9/SsJV/8joVR6PqPcqGeoqXlUmrpORiow/9d0CGYxuBVBL
F8mo+uVYwegExh8si5AZIyOrLSbB/EQyyHjGXaR/ISNKeOEx434yUHr+LQnc
JSP/32ICId/JwCFt4wN6ZMR1/T7+czXG135L3EYnoSTqVPZ4MbZfKGVE9T4J
7Tlj7yfxAcMXeJQPb8P0t7PmkG0aGdzSlVnBL4jI6qgSz+N4MmSafhgV5SEi
SlncQHUkGbuPJxbP3CAg/33LGQt3sHhP05wftI0hrqwLV5X9sP1Sozo00TGU
JN6l63IJ4znX7rWdwaMqzszONhssnsGG3wlfR5HVbd7kdROsvmPliroDI4gy
639B9yCW7w+hMNL4MOLCmyxn7sYwrfri+vQgSrL+3Dy8E4uv3XrElTKAlJvF
4/kEsXiNEX5JHf3oZNG0UvAyCepc2vSfRvWipMj409Y9JAh//EagxeE7Ul5Z
lolowrBIVdbF9iZU6efJrqwggcxifegVnQZEdtZ/qPieBEYKb781USqw/yex
aDWYBBx6Zy8+s41HlWRlvgI5ElCKtWHGuBHuHvrvU6o4hoXrBlQLmsEwBXfy
CeYbMkv0FTo2t0KdXfTzS8tETM/ar57P64QHnz00Ts8Toe7DdsMgVjcY8x3s
O8YkgoxWvJtUbC98b54Wku0nwl+hqP+yC/ohSq6pRKAVw0l7veaKBsD8Xpr9
Wg0Rcl/w85//NAjd+08mjX0kghtb1F/w2TDEvdyt3/4GWx96uPbljRGwXVgd
KX9JBK+6wi81ZqMwmF+4I+k+EcK3ONSkEXGQxPO48lEQxps16RYn4+HMRddz
Ad5EKPi6zVn+xBiIN+ivuF8gglkY+XDB7BjgpQTTbZyIwO6RPM77hABpdyYN
kTURxL+C3YoYEVxG60j7TDC+sqzL4jVWl27KPcmDROALF2xrECIBNd5PZosm
EeRaDQQ1w0jwbvZE/ZIiEdbeBRy6RiSBp4Wcx6QkEfs/H2kx18D8Re7yhhEh
Ijif2yBSGEiGSa6BrGYeIlxSC4sJLiJDnnu+cekaAVykHyYnYPfiWu3D8XeL
BHjUeucbC7tXqhLOkfFTBLBSuH+4HNOr2SAdpXAKAcSvfLX5v14VDfK1+gwT
gIP2NvQvxvtpjnud7yQAvq8tgoXpnVZsDa9lAwEeJlq7CpDJsDj1Ms+gnADd
+cktPphefjvuY7GnkADZ1/eI7rhNhuD3pmyx9wQwocbUKGB6a/Cf9DPuVAIo
V77Y/wnT43/n/+z79ZwARi+ecw1gel1d2dNNjyBATHPsiypREoSJ5d7ov0MA
1aZ0w3jsOxrdDBes9yOAeb+wxkOsLxv6HIs/XybA34wfZ5ufEaBpn6ZdxnkC
OO92co77OQYR0bw/Y04RQIekeFXWagx4jCt1riIC8IUMjGfScNCemTDkqIvF
D//XL70LBzGrVwOP7yWAcXBPfMTJURAokyhXEMP4T7ITp+KHQVQl9CAZ++7z
hj0Zi4X9MBp5mtDFGINg59njEe/6IIW+L7QaPwYyYRYpf7D/r2Q6qTalZQzi
RqpUg3I7QV7Q6Kh9BsYLr57tOtAIsRrUkKsvxsCmNNDZ6kUd/LV5UBIeNQZu
Pe7/StqqoDO+SeGTP4YvfrQ8OFUEN4VPbOI+PgYc6iHCf54lIpL2FJI8NAZ1
j3mcbtlkIzP7p8FammOQmcXcYqlchHa97GK5SIwBZelVg4hgFWoRtessm8OD
4NVXib4SrUhD/ydXNwMPGh+PzVz70I5SzyQaMnB4EDdTb+BW6kI3kocLBZvw
oGCe5aK71ovw5UETihV4iKH+5v2t1I+MceIyhoV44HM7vg+dGEDiO8/FX8Hu
zaidabSl7xB6YLDSdu8ZHt5/3XaK79YwYp9N35D0AA9F+wmqljdGUP1rckDD
dTy4ff3tG3QUh1SrwwtG3fFAeWb6JGInHiURZMdnHbB84lWCnJh4dHWXp4PE
ETx4qoQVDJ0hoEHDjc819fAwKGlp2r1CQIddcr4f34sHoZOVn/YlYn4r7DiH
iwweLAfP5ebvIiHhN5P7b4rggatK4Q53CgmFwRO/6M14sN9Yx8vJTUaTZJW8
zHUc6Il1L1z3JCM7jk7at0UccAit5YqWYvoj4y3RxcKBufTvKBymR4pH+O3p
JByki3P8NhemoDj3zzFLAzjgF694naJAQcv3bZoF2nAQJHZx0RrzVxff/Vjd
XYsDGZtDPV6Yv+ptSNA7VIKDWem8WBrmrwzo2jfscnFgcuXsHsD81XvOoQ9e
6TjwhZQ9XLwUxK8QSAlLwEEF9zaHW5i/CjYW2/HyMQ5yeo59ImH+iuZZbpt/
FwfhkpqVngfJyDLCKbreDwe0MFGy2jAJlWUvN4xcwgEPr4r3NQ8Skmt5/W/m
HA4Ezt5+bk0hohjmIR0uWywfqXgtMRsi+s1Nur7TFAc4qb+TXF8IyE3pXrbG
QRwkhER3unMTUPtxGZKpBg4oCo3OoSfHkI5Xvej53TjoFOM8++kxHvF+5Ix6
IoADcVmYh+FRdLPtfd0bLhzUFu4nXGOPIBLLZOnr0igYTNjfqf09jL6oRF2l
0UfBrfoZQxHTN+k+t4q9uFFoNS68f2ZsAMUEHeC51T0KMYIz26839KOLTVPZ
myownrmJfTioF4m7nKSqxo6Cr2Lf8qvt31FovJBj0P5RCDc5cL+nNBpN6U/n
1O0bBY4b/v5I/z44kBp/8cpjWJ17ffV5BmjsvfUibesoyGxRPrea8AVoTSPd
9bQREIz470vkeiNYXyvatWV0BHIP2R8SSG2B6m1Prtt3jcD+J20n0lXa4KWL
weaJshHo/aVmq7CnG8z+ppnwPRsBH82WV8dqB+Brxq3E0w9GoC71fD1jYBDk
TKzoGUEjkOhxDmlShuBf/Hq4pscITGrt4GPiR8Br/2hPyJkRsBo19r/UiukV
qUiqyXIE+ImPmxvycFC416PaQX8EfG3x8zctx0Ci32BLpuoIbPjk3rp5CwGi
goXPsmRHwJT9g75STYBFKXaulhjm0+wrdi+5E8G9uenPHb4R+PZY37hkiQjd
19JNm//D9vN4zTAeksBAKPAl/59hwCuiiZMcZPhQbsU4wx6Gt6eu7iv1IcN2
VyXtt9RhcJE15WN0k+H+Ro4HU8PDwFUdJukoiOlL/mivdie2/sKFn381KXDW
rlg6tH4YorNSrxtbUuD73yc+Ld+GIWykvWIfNvfqvPGoESgYBsm4Dx752Jyc
aXKQz+ntMKjJvT1R5kOBrWzhc++ShsFaYNtnq2sUCElgf5x+OgydmVQtfzcK
MPc3/9W5PwzqnZ8Hd1tR4BQ5/XhY4DBcVLi84IvNvXURgUnfrw1DgpGjiYsw
BVRVrccF3Ych5OHLqj9DZEjpV9I56zAMuLAdBt8wfeW+zfEwywLzKYjLWZaX
DP7SuD620TD8WPH+6/WMBOTmYhk9vWEI51qwa+Qkwd1TS8b7VTFfzDlRwYfN
EeJUoysGcsPwTmeGkUUigM1KT/Fh/mH4mrhalfd0DNhPxIaNuIaB/7SRSXof
HqLEXJePLg+Bd8iHnXQ+PNRpzR49zhwCUyvXmnTPUXCu0718gjAEju98j5Xd
H4G/J0OfWvQPAT/B47j3y2HQuMI3aF07BMP3NY/LvRuEzDcqFx2ThuDbh8vs
lHO9cGif/5OzmI9vKm+L7fDthtHKik/OD4ZAfNDKf7tUJwgOm/128xkCHf/Y
Fvcz3+E+3+XHV0yHQHA9+BSlthI8bmd9DPk9CEUS+Mqd/p/QGvd01132IIw6
fHTOYJag1ESthTDaIPBs5Snn3VqB+j/XGzzsHoRBQwaHckY9OsYkdzzNGQTL
GlKrXWAHogQozT9LGwSjp5bkh4Nd6O5/N7bHJQwC96uQTe+Ee1Gp5JpzYtgg
CEYniF041Y8UTknOpjkMgszmUmpGyDCqo1wQemM5CByFmu2vMT1x9snXe3t0
EGySPDbdPTeKEp8Y3MtWw87vVfjpK4pHGmIPsj4oDELiro1agww86nzf9v3j
zkFQ/LptX3kuNq/XOQoWcg9CxqOwOx0CRJR5MlOnaGUAujuUua5+IaJDYxOO
XxYGIDixcebyCRIa9VIPLZ0cgAx909+PB0no5u/At99IA8Bj+TAs/hQZCT6q
bS4fHACXBcm3Ni1kVLCNe6qyfQBqGnrlLUQpyOzNSf6augHYtJkhJXmMgsZV
X2rBtwEIuOrxNuoKBamEZc9O5g+Az+8NBZNPKcin52ue0NsBaNjuHP4mh4JK
ZFouHUoagPrb6TffVFDQX79huUtPB2D7sM0NUhMFHWpkkp6HD4DI7XT26VYK
ur/9T2rFrQFYW2D8x4nxLRc3naFfHQDP9m+uzDIK2lwmJrzVbQBExXfacb2n
IGse5R690wPglKoKnlEUlOi0/6mb+QDwfRBTEL5IQaN5Zsej0QDMb3WOkzKg
oF0rjpylOgPwEx/4JmUTBXmcvALEPVg9mo1UnddklJNx+84maSzeGu3QLXEy
mp57oq+5fQDM/LU91B6TkMaR1J9neQdg1mKv8tsJIrqVkPf50Vo/VEb+t1XE
gIgq6ZXXCn/2A0G9WXQ0jICORY7R/yP1w8Qr+sMsCh5FjUy/2TvQD3y3jthe
XsOhTuWVc6db++Gg/7bGeQEccuiQHMz90g8JVWYVWwRHUKrkvrj+D/2QhWMG
Ra4PIbK3oeVKWj+4WQSPJzMGkZegS5P1435ocD/UGBvfj+6cflP6+1w/LAaw
tZe2dKC6nM++Mrb9MLimtDvdoxVx/QVVc9N+kDkgXHTjUzOKTaW8T9foB+dj
HFXvFOpQJln2pfHGfpj3nNPc/+sdGtfQsvVZ7oM6TVt6WOIzpPLg6NbkuT7g
uG5Z5dcQDiUKFyKmcX1AWcx8GXEmH1quvL+VUNgHhIqPKcdQA2ypKtWszuoD
Hcu9z8R5m8GGr3lmPLkPbHa6Rpe2fQdc4fjFAw/7wDOvbllepQukOH7LXgju
g4LS2Yqb33vAw5abFOPdB2FWq3LGe/uA/VPRgXKmD4qYrRKp7wZAw0RfaPPJ
PnBJHrA/3DcIt5KOd2sf7YMKAaWnN38Pwdp+L9PHqn2QwRL5FSA3CseigzcU
y/bBkyx1dX1lHESNRdXiRfsg1z5xNlwOD9vCPuqp/dcHmS/3dQ4sjEHkN+VW
wT+9UOfEmadTSYDl2Q9OP9m9YHK/KVUykAg+SkrTQ7ReWL4hc89QkQQ015y7
5aO9gHfZxzrZTgKH5N38r7t7obWXYcDrQYb23vdvQpt64YjJtwb1GTIc5lXQ
dKvshXhJoWuNuhT4ciSr4WhRL5gZaty6jumJYoic/e6cXpiv9BkKyaRA6pe3
45vSeuFRzDg3roMC/NMyQVPxvZBiflD75jwFHshn8nQ97oXFDw0Gh/ip8Puc
dOrn0F5IW7pfJb+bClcTM/YmBGD5DsqKyehSgdS5q+bmlV5YlaoL2nOYCnYb
063OuPaChnf2gIERFVoMJSkHTvdC7z/8nO1BKhgEvvaTtOiFsNU37jfUqVBY
uJNz3agXvH1qYpMkqSA3kZJI1esFmlh5QdcGKiRJ71BsUu2FW0OU2l00Cmx2
TC7LkesF56JjLxIqKRAWJ3biiXgviHQE1hrEUOBnaxL+Gn8v0NPMk5TOUODy
f6LXrbh6we7s+b3eEhT4FqDyz32xB3goSg+NMT+XwVCWUqL0QE/B79g6GTJE
nlY6wu7ogd/rKimRD0jg07Lbs7isB4J27Z0ZGCGCg77C48CsHsgdkpqekiGC
0g7ZLo47PRAyLaGZ/HwMe8el55sv9UCYztznjq94+Lu8S/ipXQ/o2izycPbh
oJWw00lEpQfG3ZJlpyaw+Sdz+/geXDdsjtZm3MP+jzbbhHnmmrqhWcTT69Wd
ftj/YNve0qJu2PvzoMMvyz7g9eT3OxzVDVOqos0DpV2Qp8SzaqffDTEFIbt1
nRshIZlbRly+GyQnR254FtZBCO/GY0T+bpinPXe+s1AF5tP/PbnM7ILgI+Ic
L5eLYLrw3/a7L7ug7r+EHIttL5Gq3pxq9s9OUH5ZfU/8USu6pHbvXgWxE2yu
R1j6OnWgN4oC/V3fO8GSWv05VK4bCYmpB/1+3QmONcdEdZv7kIUAtG2O7ASN
HqkRR+EB9GiTtaS0byeoOBCu1DkOoj9/fOqPG3dCg7qA+EzLMNKYXxN2VuuE
8pFA3cjZEXR1MvaSr3gn8JTXlW/ZgkOE0cItKewOCHlL0K2UGUOifYddPg13
wORy7z+yOAFZt3UX1dd1QK3rSUM2JxE1VMyenkrsgA36qiI/i0hopTgsdy2s
A1Q3GgpL+JORbh7/P6ErHVDPiHY/KoTpzbuMk0qnOuC9Wsro9AUKyk1Vyzxo
2AGFaZcOUT9REDWhdsFaqQNMqeKBq3MUtPOplYnntg7wOTUqKa1CRfYPSa+C
/7UDmzMhUtmZip7d8ZmKGW+HTOel4fUIKmoJWDv0tqcdZlvq+Z5/oCKO67HP
v1a0Q8c73q1NdVR0wFOK1pbVDi/L5gvi+qjI37lQh/SsHfIlT1dM4aiowP7w
44WgdszPf1npwPC4ZTeO26MdhF1kjmlh66VMXFQlLNuBecLbWRo7z9FwNkxd
rx3IP+0lU3KoKEE3rO+YTDv83Nvn+PERFXXs41dw3NwOtA8RzPNnqYhLMSPw
+mIb7Jo6/qJViYoOS6m1hZPagN+hWWqdTUFBorUSL1vboMLLXFMij4KK+K18
Pn5pg81zhTYGrhQ0xU2qq0lrg9TFawOhfBQkv+4t3B/ZBgOcDVkimL90/rN6
kenbBv4mGXu3Z5JQ0tyz8uWzbbC6LCto00VEPJRP5+XV2+CSgd9t7tUxdHTU
sEh/RxvwpCW7nuYYQ3d6uzZYcmK8gD9X9G8cmq2b+XBzpBXMuo+6JNaMIKWK
0OWo+lbYQjTf7Pd8GLkVbz2Znt8KQq6yU0YOQ2jg7b6F5nutwJkyqLWxuR+V
P/A+JKbcCvu1daqCfNvRQ+OZ3org72A0oX+LszgONZixrXUufAcOw6fTTT33
gOPkdHfhye8g2PpPVNUqE+6eZnVmyX0HZ8ZfzlT/Ugi8NN76rLMFZJquru+2
bIHSq4zjPGUtMF++P/rnoTZY8KG3PHjbApnvJMQE5DvhRhC1KSiwBW6W4Kpn
GL3gFUWsc5dpAcF3zMYxtWHIiSEgwuYWeLXwmHHh6ggw4sZqHX41g31nt178
61FwT8FVW7Q3g2ODT0k2AQ+Z6aMHW0qbQU143SxsegxIb0cqjd40g8LCtCd5
hgBn84bKdW82g+knWVunDhIkFw7qF7k0w66dUv3Ps8kw/GXgm8qJZlD8+d2u
eT8Ftpf162ZrN0OLZYrYzVeYv6jqK5WWaoZ3a/5FObMUSIBe7VSeZvB8K/pT
C3vvext7vmz/2QQ3/pxWXIigAn9rt+ZzYhMsp7Vsr2+mgmVnVxFvaxN8W6Hu
Cl+lQnRvp/qjL03ANHliIryPBq2DHYVraU0gTRg/4mFPA25c+77bj5sgzvfN
Y8cAGpgQ2wp++jVBTrm7/fgTGjyitu71cW4CpZsFZf9e0aBh/HvepGkTFB9i
pSSk04BjqmXPBc0mKHVprH+fSoPDs825RIkmwDXWjmg8p8HdhSYlR+4mSG/a
4nXgDg0qfzfm9M83wlJYEq3JhYa91w27T441Ao+MbQrxAA301+vff29uBIJT
RXU8Hw0COevljxY1QvvWVIefw1Qo3VT3rjq1EYTXNh8TT6HCwhaQ1Y9ohHMq
xUo7T1FBQ7A2s/hGI2QcOXZFdCMVfLbXSKuebQT7Cw7Sap8pUCBenZFj3Ail
qsHckbYUmJKs2iWr3gh6lfrUmFEy7JGtTHu9oxFENRou662TwGt3hYQoVyN0
7AlSvyxGgpw95alxsw2Q9GzT/UeyRJDT+pYc0dgAVaXhIQZbx8BN76sYR2ED
qPm3V9TM4eCNQWlSSHIDOLqTzDe0jILksS+JN7wbIDn1l+249TCI2BfGOYk1
wDZvdYPByV74ovi00oSzASZvRSl1yveAzdJlhuZcPWiZebkWeXVCdIbs/s3f
68Gz8GbFpp4WWJtMJFcG1kNBfMYJrbPfgBl6R01yuA7qIhNC96dWoIc2jo48
DXXYPDyqkREDSEZe98HipzpIE+wUU6tsQGdbZ4c6IzA+8FvT/metqFvIIzRU
tw7U3pVy8lD60LXxwx+uyNaBXEW7jIj+AOIpl+g7vbUOjGsr9kxFDqKIyrwT
zu0A4un29G7+EeRjHZ9cswfgKMoJuFg8hnIXzdkv/wPQ0ngw8aCOgGgpXEY+
uFrofbRj5VETETkwgiakntRC2rpgW+xHMop7onnwj1st+Frd7mcaU1C72nRs
z/5auFudTvxcSEHotote+GQNZNxSvxLnQ0UhUuLRjnU1ENb3QuJMExWVNvYR
NZJrIFKcOL9bmIZmvZ5q8vrWwPNdp9XHztKQMr9JBPV4Dczsa6afeU1DHiVr
oxXSNSBzqGD23iANpTmWqyb8qYbgrecEDbjpaHjVL/xqTzWsHP3x84YGHQlm
7R08+qEa3CL1DvCfoiNzs3EliXvVoPzCIpTLh44ezWTc+elQDXUW6h4m9+mo
NsGxp0OtGnxvb3/ZEkNHf/WF5N9zV8N2u4iB8Dg60iJ2BN4lVYH/Kbu5Gxh/
/UFEu/23KpC6a96XEE5HOUpIal9sFfy+XBUyfZ2OqJ1//TZeqoLN5uUb79nS
kaT/l2aiYRUQjJTen1ajIwex6zu+iVQB61dieggnHcVV7/aOnakE83/dFiu9
NNTuTq671FwJUn0mouwkGuLalLIdpVeCyT/96y6naehwgZ2X2K1K2MibW3OV
j4aCbfmq5ywr4RNbOmBvNRV9+d0s0KpQCU+CjBk1nlQUm/eu4fBSBfhqvVNZ
WaWgay73bn3tqoDANl8nyecUpNCyf+xdYAVwMNr3JWiTEUeISOwOiwow6jDO
eqREQsR9C0Zx0hWAe3bTYIaPiJJe5ueEtpaD3KGN8bKFeOR/IsppMa0cYp3c
HNau4pD1qiffNb9y0H9r3+MvMYp4Lkr5O+4sh/LVp7gopyEUohNvqH29DM42
R79tL+9GDpPe8x+NysDyUGZcxvMOpJ1mniUjUgY08QBDY8dWxObk4uWv/Qbc
s6c2LzXVI5eBwMFJgW/AU+pXPD+WiY76O1/LKCkFleYTZZelv4OU4gEpkahS
KJo5r+Xt2w7/cCJ9T51Loe6BWJvPty4oPdKjd3tjKbQs4UrStvZD3K981hyu
BL4GrNDuvh4A749RaZcKS4DnbcK+AZkhUNx2dIP9mRLgDPW4vM4/Chuapb62
7y2B6rrPF3wCcUAO/nf5CEcJBJTaG0X24yGZUtql9vELMKx2RotdIsLNxPjw
7NAvEDNYtMUujQS2Zj7aknZfoK6jWr28iQybi5RSeP8Vw/MBA/r4IgWYF7gs
w3uKoX9R68dXfyo0ilHXfmcVw21z3arYSSpkdtQUewcXg+l7lTJdB+z9vpfq
ybAsBuQmIXKzigaO2kFi52SLwf+LDV5UnA66E6fa+34VwZVDFcuz1+gg9Foj
1Ky9CDx8H/n2faPDrNVWDcgoAqPNLNtXf+nQvmGKphtQBCtVW8Z3aTLgw7eW
lwXHi2Bq40qxqRsDHl3NMpOXLALVbbUJfyIYUHeI44829TMMmjjV73zHgNvv
K5xloz+D4mEGPaOUAVp8AQ382p+B8O6xaFANA9gBqsorY4XgeM3/Z2o1A7LH
xp+xHhXCn9nKZO4vDMDfFX2Trl0Iygl/T7q9YQC/1PEiW9onIImtJpo8YsBR
CKrfGP8JzDx+/q3B8gl0y+2vQJ/gz+HyW4M6DMj7D0f3ni0Ask/vzVccDCC9
4/0lm14Ah9qXWsWbsPqNDbiHLQqgvNwx1/seHUzHr4pFL+fD1tZj2YVadAiJ
fK18+GM+bK74nP2HSINCpc4DC5gP52Yfxl2+TwNa64p5Dnc+7Hj755PsLhqI
Xd3nfPZrHjwSyG40L8b0fYuLN79nHihRJ4hbsHkgvCA2rEEoD26p/BuMa6TA
5OxcporvR8j2uRtyIoAMknEyX0hSH+FBjLWDzmkS2GjaNiZ05WK67xpnpEKE
8oAv48squRD/cXr4xWc8PPl7U6VjPAeCH2uNS+sO/Y/h6o6ngo3CdtkjqaRC
VrKSCqlzE+UrJJXsIiFUEkJWEpKkQZK9k4zs+V57773Xvdd177W3jO/+eX7v
Oe85zznv7znvg8p/JF30+paMhA5NWRDLutCScq/m2avJ6COvnvzOpU5k6HHh
+c/YJFTVecQMp9mKJOm2cmyNEtEXiU5uobsVyDRBsuYESyIKktxn9H2rBH1R
M+rtKkxA9sE5HR8u56Etv9KNi3wJKLYy8cNMeDRqYvW6xNYRhyhu61Pkshyg
+ZOpjfWKQ/q9F5effy4GBe3xB44ycahUvujJtwwsRIZc8Rn+EItsUiMi2J7U
Qb/k/mCDj9Ho3ltGGoxSJ2CePsmqIEWhTKl/hzSbuiA1s7HzlEYU2k4Czs17
PeCq8PHQFl0kUtUuDUnR7YdJ5zkl84c/UWq9UdWTqgG4UXTLuLEsArkxvUvT
lhwC/ss8cREuP1DtGRmlU/0j4OP9soquNxxtsRQ82jk2BuTKbrzN2XDE2M02
0X96HEqvf5e8OBeGTghO0d3TnQCRwA3NhJth6NuJ+xSXoQkIajZ4zvorFKnk
N/F8NpkEk9sCuUOPviHb5c+p6OYUUJZXlZyqvyKXmoNbj/KmwD2sDXGIfkUs
sbJtrw/hgE3pl3rquy/ohqbV5ZEXOIgc8mm6QviMTG9XaJtV40DK0/j20LXP
iM7k5n4cBx5KBM/3OaaEIIt137dqt/Fwo4rThGN/CJqni163+ICH3KbOmlsd
wWj/pm+dZBkeurn8Ony+fEQcGuijJwEPy/eURvLuBCHPdCZxzX0E4PlJIRJ5
PyDn3uQSnxMEkB+PWTna+x6JiX+v45UlwG3ROzS3vgegiGZNoY1zBLC3YWLz
0fdHN2lU90QVCBCSWXQo74gfKk2T3Y44RYDMFbuTxEFfRC+7fuQ+HwFalQRl
j0a+RYfjlatMtvAw59mlrG3igw6cjW/K68EDe7XftTfH3yBd9tZnT1LxoM/j
mGiNvJCf14qWnwMevkcOlrRe8UBz+VJ2xxTw0Ct2pUuh2g1NjVueujqLA97s
FFLENRf0ivmACmc0Du5c5KCjbXBCZp9cfkVew8GXGscjVjdfIu9AbCnz9BS0
3xqSa2mxR7W0+duvvKbgZ70Okk+yovLeN9q58Ek4PHJsbveXOVLJuBCiwT8J
p6d6lMJMjNDfU38r/vs2Ad7dEt1Hqy4hpyP+UUwvx0GKc8SGUVoEGsnCzwyy
xqB30SeGa0MDzvXK6EU+HYXXX6812io8hNoXOqHkyiGoEnzvH8XlAEYmcR9Z
pnvAN0zY/kKwI3T7WNpg7nfDNbZS/Q7WV3C3hSvqb3kn1K/PnWLc5w6/pLm9
3MmtYGUlaZm/6wNZoov3Q6QqQEP4leHbS74Q3vpSzkajBCRGqrR13N9B1s67
cNtTuUDSNblA2vQHjN/phGiZ72B3OWT/8dUgYLvyM9tBsAAVsbzuqXT6CsWq
nV9C27tQrPTBrkzhb4DdlXzkFdWD/HQy2yPbvsHLEfaV52Z96G7YVJPzqTAw
9Q2OO9A0iC4WeTQ86g2DpO4YU4nnw0h4+FCdztvvQKJZG9u3bxQtCGlWSo6E
Q9OvMf0Q/3HUp0ZAhwJ/wFtGM5clKv+VW3mXMVyIgDTlB1dq5ibQhz+5haMh
P2GE6XmMzfkp5NCund90KRIk38BwZMsU0l8m5hSSIiFOPeLBnhEOiSkdy/yi
Fg0W+7tVLpvgEZtxQbrXYjQQ9XbVfrTh0bLn7TS76BhwIWnJCSsS0Gz7ale6
aCyEtQRyJoQR0MPJSt2T7rGwgquyJ5EIqHv5U8ePzlgYdf7u0qQwja4zmuhw
nYqDkqMvNo85TqNiPsk2P6846LqTHVCeOo1kJNa1dnri4O5MzufgzmkUr1Td
/FIqHqoUf1s6Lk6jgzc/3yT5xEOS/fVbRoxEFGBs2vhwIB7+dQmFnuUgou2n
p//rk02AXlb8xyVWInrutVGn5ZcAPN+lEr7sTqPJkJpr1cMJIPKMT/8AYRrp
xX+pUT6bCL2bPpquldOoIeeBWvb7ROB5T3O59es0UqmRqhIfTwRJj4dMQobT
KKt380r0+STId1r9/u7gNDpJrMXyfkwCUqfbOm8tAYVtfoUPU0lwaz357Kwt
AbGwmpXTKidDeIWN4Zl9BOQhIHPJJSQZVGonbJnD8WhB+l/JHCEZOCbXb8Qf
xyMLqFd+fCkFaBsafkv/xKF+ndCioa8pMKxatzfBjkM3zc0VdUkpINka/WDL
eQrJv9s+B99TofG/43qGVD2bFNaQmzebCn9kHnjIvJ5Ah1PDzkqp/YI9qZgw
L+w42muUO3Nk8Rcgaw5z9HgUOQzvZH66ngbnM0Z2LlQMI8JsowxTdBqs2lke
fcAxhJq5Hkst3/gN/ywKA8q8+1CE3g/xlsR0aPkZeci7sA2dm6Q9/kY/E7yT
vxzI/fQeZIrvL8r9ygQNQl+HhUkyiH35Uz2+mQkS7V+ulp/OAda49HOxWlmQ
//Sv2mZQBWzr6A/vzWUBevT8l8bPdthQoa+9fygbfvW15/z17YQViYzMTMiG
+jqHjS6rbqDQMLx9EJIN88VCPuKH+2EkK/MUOvMXRO71YfnYxmAw0vDAIcO/
4CfKdf3I/XHoDWDceebzF8btBpUOCk9A60Oj9uNdf8H6zfsE30Tq/1+Tqdj5
31+QSJtru2s0BbWK2QmtJ3Ng1DuioJkFB+Vc+155OuYAz8wNl0BdPBRvZz/s
jcyB8NnWHVUSHvKJxjdkanLgW0BUV4ArAf5271Pwm82Bg1nlQsdopiED+/fY
6MFc+F0+YV7tMQ1p6Sb7zl/OBTFaOc9rS9OQHL5/8aNlLvw32zn2zIQI8b45
g/jgXGhwOxnChogQY29afakgF/yjXP5b4puBSGPmjNCxXPhh9iFozWIGwjVy
v8/uy4M3eVY5y6kz8E3hwRt1uTxIdJugq5+cgRBBFtso/TywY/QrvsdDgiC2
vLur3nmQ2kx38u0FEgRsPLis9YvqH7EVoaxLAl8ci0RSRx7snLkab2NOAu/2
PO6dzTwwX3o3xWhNAvfSh//uCueDZdplFfpHJHBJZcWn38iH7xa8VSZ3SOD4
Lb+V4WU+dMYHNPMqkcDe26zQ+Gc+PBXamj3NSwI7O7b43Kp8aBzf2E3DzYC1
fsEHNko+cI7NHI5OmwELNXMnC94C2P66+e2g5QyYybE/KFUpgG6y8X6xQzNg
KlCowfu4AARPTVwmlhHBcP8jebuPBaCIbTrrakgEvRV2geq8AqgnsTJvUaZB
d7yQUWC0ACaNsdufnKZBu/nR/EumQmCX4TWxWCHAjUKOgSaZQqDNc3ZLfEIA
1RCL9NdehZDIaTMkp4iHy+6cYV0phZB36bUi+TMOlK2LvU63F8K7mD7T2Umq
XsVw3RkSLILNN3hii+0knFwo2VSuLILXPDdu110ZBfeWq74rs0WwO3MTOegO
Q29aE0fGkWIQSislatwdhMDHQyeFXhSD31XzBzyyvbAwuKW1T7AE3AUsUysK
GqG8Rim+y6MU2PhUY7f48tHhhAqpj79KQeD7RuZ4KkIO3v8VXOspheL04Tuh
P6qR6EWD5iKpMmjt03S342xFQVkuazFDZaD4u03i2rl+RPhI88ZgXzkcaiQb
nrIdRBjbANYDZ8uhJ3JnQCNsGC2Lhgv6BZZDxxHLOAaLcWT4s+CGnRKCJ7pm
TUmXcSjXBXpEHyM4XSBgZCCIRxx6dQ/GQhB4hL5KrdzAowquPkddIgK+okp+
xqBpxP4qc4+RBQvmn2lvc10jouLHy9WTJ7AQ/ya29dwqEfFefX0r8iYWPDva
jazOkFDFGcTraoaFvvn6paYyEnomSD947xUWdPsNzm9fIqOjnNdj5D9iQdDh
UGd2NhnV7wRacCZgAccwdiD9MAU5UVpPUQqx8FY4hiPLgYKEh3jm61uxwBH8
oTgAUVBrg15uEg4LPZLpPPv2KOh1YYSrzxb1vtMFsnRnZpFEyujlB1wVIDgt
/vD+vVnUHSrMoCJWAZ307y6RbGfRG1/LhsMqFYDpaChPdJxFMi/TgldvV0DG
AeL1V89n0ZDZ3J1OqwqQzNXP1zeeRQE68kcyPSpg7GyOzbWLs+gcOI9++Erl
PWb1W2pss2hSujjB+lcF0LgnDBm3UdAngV1rdVQBHUNnD8b5UpAKq6qMcE8F
lLumBElIUdDM5rvlXVIFWDDY6HPXklEYsaFwiKYSul/QsXnrktHVPnbPQr5K
OL9hlR7TQUILNbevhkpVgimLdlzcVRL6L2GgRVu/EmhGq1LO0M6ghXcZljVP
K6HiwpO8ZB0iCrd+u3fxbSVkNPyXZ/9tGhGlpc+cyqiEfZlaxhe28CiEi64x
pqoSRFP01IcE8Ehxudecb6AS1k8ymgufw6GAQu9v9AxVoPoy5JOgxiSS+3lP
2u1IFTSXixUlX51A/R6StQsyVVBDn7z09Pw4krjavT5iUAUlCwaHju0bRvUt
4kaFmVWQfztnVvlrJ7LP2l6WqakCLl0cEj7Sjg5/7QhKGqwC+U/5utynm5C1
/uvyL4zV8KlxsuodBYv2T7UKPTWqhhCybvOPq7FwfcOJKLSvBkw3IiyZd3ph
bvDGm3CBGnB8/drR8u0AhJWd4OeUr4H7KazidjTDQPBpuLltXANHXp3Xn7Yb
h+DH0TgHhxqobadZWvwxAec1XnrM+NfATeO4CmbsJPixH8vs/VsDQqzn3BVW
cSCzsHhdq74GFnbzIxTpCdDbWTteNVID1Vfv90jtnwaxcHue7P21MGCtKDW3
QoRWN/Xf4sdrofj5jecNQzPgbMKvFn22FhbUuUKyC0hQK1zt9MG0Fg7fiN5Z
0aTAM8YfHHSOtfDN81mMD+Ms8BGfpri8r4XaEEMZn+xZKG9UxcxH10Kuxyj2
h84cWP45NPA4txb2q72gOE7OAUcI5cVwQy1gP31aqLach3yHCpY7Y7UwR2s5
hhmZB9N7YQkNK7UQYUs/2Sm8AEyKtioYljqoGGV9NHRrATL4MT35J+qAr88h
KdppAfR2eJ9Jn6uDujHCe4ZvC7A7NsOUeKMOyj1WpTbSFiC5sjyG/2EdJCp6
LFsVL4B20lfFz0510LecE6peuQBr/tYd+z7UwfnHJRJ+VDva5pKNZ2wdRB4o
FxMuWQB1LR761bw6KCV9cjqYvgDBZsyLmw11YPagj1fk+wL0O9GM7Y7UwX9i
9AGBrxdAKHC9mX6pDiRa5n9oGSyATfRc8X6merjQ3J/rKLcAOX/xqez89XCV
s3OCmXYBtmuHw3hk6oEi7Bp8Nmwe1Ie6fA+p1oOpv62m1bF5CJ5vdBDQqwfB
FPqMzu9z0Edf+VDIph5sf08GRDPOgeDhIm0xz3oYf+TXvGE5CzZSWSqnv9RD
1oX9TrylFMjBpEjKJVPj3w6+PsVIge270YfPFdfDnHdAraMqGa49CWVSbq0H
v18eBxQdSdD/+e3k1bV6+Mtm9EQ9nwhCyW7tGiwN8KfP+JFk3TTYFL8o1zre
APo3aDnKWgiwPfkg4v61Bpgz/MOpW4YDIQUVXduwBli64H9xXm4cbDTOYuzT
GoD+t4jgn+URyDWWlHEqbwA29+oD8GoIrr07zOJFaID0F9dprO/3gk3vSsWX
842wY2clYiJTBzkkcub3G41w7uCHgJBEKm/tTkZFmjaCXIyfzQ+BQggW73BN
9msEGlPGpR+xLpDj8udMcW8jOLCLZgzR1aLtoMQTiNQIc36ducS/Teha3E/2
6t1GaOSucOzPaEf9De9nWsSawIq3F39eqxdt81vGTTg3gdpcg8PLyHGkLmvy
iRDYBJnGWCYVqp4JvnrXgxzdBIV4/5QrylNIyE7VYLW2CSKP8idNluORjbfS
9a3BJli0/3fLYY2Acr/Jnduba4J0PkEuCTEiulZ2nJv5UDM8ufWXgdmOhD51
HNxjP90M+iR+ksobMurHs83yQDO0N9ampwZRkA3Hv3oBq2YY2/WPMfadQznC
S/lCr5thpZGIqX8+j7bPzySKfWqGtVd/vQbEF9CnB33ecgXNsEznKla6uoD8
KCpAaG4GRxd+LMFwEXm6xu/8nGwGyqZ/ol3hInJm2l96e6MZ9NrYIo5wLKFn
X5+67eNogcHGb3WlRkvIUrBLsexkCyQnD7RKxC0h0z+K6w5KLeAmcwR/dnQJ
6SlH50ncagFrt+ukAp5lpF1H7zhq0QLOx7M9v1xeRtfuPpH/5tYCw8O0h5LM
ltHlidaF/0Ja4DVXEkfP62V0/plC5l4S1b/EqZD14zKS+ffjaV5JCxj25z49
H7qMxAL2Ttt2tACd1qWf174to+MHH5MEp1tgNXy2+UzgMuKLb0zt3W6BWBFM
waLzMuKQlbMK4mmFs/2s4Gu4jJhKQ0VVJVqh7aWVF1lhGe1q/Jtav9QKfyhp
LdJMy2it52H8nzutcIoUWHKvdQnNmdc+fPSkFRy0bx5y+LiECPOnTxzxagXF
z0yk0KtLaNT980jrt1aofb/fsX9hEfUyr//0TWsFrJCK+L3QRdQaZmyojG2F
xavpMafPLKLak5WHF3paIUfpSIRX9QIqzxLvS6LqfqJPItHl1gLKaFy6w32o
Df75edQfi5hDyff1eeqk2sBtdwOOe8+iaFxZu7tqG3BlN+mu61FQ8G6AFvFp
G/yS3hQ/ODCD/D7MsUa/bQOG4P/+Gb8jIs/Ddxvv/GgDn9ov4m9FptEz+RPX
UXUbNOS7HSy9hEPiOYaCTeztoHVVJXpxcAjtm144Em/RDjR//Jw23Z7D2z8n
N92ft0M/bpfW4Wom7L3U67/v1g64OXae+jvlsE5TGsYe0g6+fkK2BeMtMM3v
f8C1pB2eRdCt0rwZgUcTRUt3atuBwCPtGv1+HMZSKB0yHe1wKkdL20FrEvoU
dENwhHaQE4oaHqrAQ532MXYdng74Yev1MOgaBXhlJvgcBDqApT9p+VXuLDxk
TxL8JtYBYWI2OpKH52GrSUqhX7kDZMJ99imPLcC13wuXttQ64Hbyu6dzXovw
NTD3usCtDmgmb0/e518Cqf9UjB4+6gArLbaD8heXwUWC5rHP0w4YkTGNF6hY
hpp91c8SX1HvG/l8NAtWgGfa36X2TQeoTsdnZeavgGntTR/ihw6IwFVemxBd
hbQkziCWsA6Q9m77wv5xFdZ9u0KlYjtgKaBdnoayCmoW32O00zpAYMuh1l91
DUKuGv2yz+0ARk1nJueQNRgWPpHzpbwDyrNph2J61uAU3VRpbn0HXNHssx/h
XgfnieTa3s4OEC830mJRX4dKrE37xnAHPFu2NmN8vg6csTKD/NMdsGk0xZ/9
aR2MvZamVBap8erMTsvJ65Bqmj9r+q8Dgtwc9+XnrsPqJbd1b8ZO4CqtPUAo
XAfVY5dpEzg7wUh867NjzjoEb9Oy1hzphMdHb13US1yHoaEa3umTnaCY1vH1
7Yd1kCh5f5xZphOenX6xtGG9Do4RWhKnFTuhminJP19lHSpcueW1VDtB736E
OZZpHTgMei4+1+yExK8Ex+N1a2Co+EP9s14n9M+VfBv2WIPkQya3ch52gn1J
pAfL6TVYXhM06LHphANxH9pKWlcB04szX3fshHSOArb9T1YhKC/V7ohXJzCN
RYeybK3AwDc754vvO8GnLCdh8s0KiDnKeZt87YRsG3vVHJoVQPKFX+NSOsHh
+6L6yNQSsPG4R1Vld0I70SPgk8YS6C9CCr6kE9q6hnfJiYuwlFlXfKq9E24c
+6bgob4AItJ9E9kb1H7ZxTM+NaDqR7af5C66LhBXTfqSnkaEMrLp6ipbF7yK
rsrQmyeAXhphv7JQFyw9wB9/em8KAsTXZCv/6wJJD4JBs3YfzAod9OyM6ALL
xTfafONVSPF13IuKxC5QTs6l3YZm5NMt/TgrowtyY7VTVnU6EZ//Nc3gyi6I
dRHFe2YOosuUV/w3SF0Qqqt4Lj8cjwLUGTiUVrrgvnlTwv7oadQZHUIrsdsF
R9UTTIyjZpDl7V9ERp5ukC5JdGzxm0Wf8gfzK5S64QsNk67mqyU0yGmVlnW1
Gx4lp/kP6C0jkSfLUTFa3eDmpJ1+TW4FFR5le+dh1g3ybiE9N9pWEZ1TuIud
bTdQ2Pz/nv62hjRbReyMnLqBVlff1fv2Ohr3vnRH6X03nM8oKDiTu4EkBxuu
SXyl+hPMzUn6m8jxrJ7yoahuMF9Vi29b2UTlQZPSTCndUNqTYhHmv4X2E54J
rWZ1A3H14cc1rn9IF/7x4oq7IU3Wk+93yD8UGe6/v6u6GwIraWUdmLYRYfHA
dkVrNzANx+qzO2yjMzdj57P6uyE3wMX3Stc2ck+UmoqZ7IZymT8yfad2UO1O
YW8wherPNeMS4bSDuO6rN3qsdUNGYsZVo/wdZJjVUWZH0wNMOy+vzZJ3UCKz
abYRSw+4FLmLSfDtUvcBKfEGbw94B1sHTSvsIsVS53Cl4z0wl2mnyKqxi3wO
0gdJSPSA0ILMwVe3dlHzs09eh+R7oLNR6b8DN3cRX/3Rl0wqPSDGRnu9WXkX
PRRKtVxV7wGC8vOhL8d3UZqbgiHuVg88t1hRNl7bQStdWK0ugx648pSTXbhy
B12W1rpS+agHzr+96Tz5ZgcF+A0oZD/tAau+34Kx53ZQ19hjidhXPZB801vV
fGQbHVdaOvrpTQ/IqUUnKLhuI+svnpyeH3qg78FmrDjzNvpLZqF/GtoDqWbh
Mjof/6Ftte9rRjE98F1iqq+O8R+6Fn2SdONXD1wXvl6e7rCFQtYzR5RyemBL
US5MqHsTiaTVVx+q6wHTf3f+GDttoGf09wqZOnqAJjWJ1itvHRUaT/xeHewB
9aMjD2ZI1PfCufWla456n0Samtf5VRRm7edXudEDe/eGT0tqraDxCh63bLpe
2CpiRkep+9rJ8bTZJ75e6GDJZKPRX0R8LPOlekK9IHDwdqWk/AIqjPl7+LhU
LzRW+mg0Mcyh7Ual9vQrvRBQ++ACln0G+QhpQKNdL8Bg6bpMwTAKbrU4xljV
C5O5Z2oFVDpBzkLCtbmlFyraLh2N0O6Hjk1y99f+Xsj++uTY/KNR4BV9GSQ8
R9VpQVu/TlzDQ8TrN//gSB8YFIo6f4xbABVu9fv7RPog4zizScThJRhJ3p/T
KtMHVbbXNLsDl0Gw85ONiVofdOaO1e8zpfKdRPSA2/M+0LnMd/Bc+j/QKDc7
p+rWBx6kBZz9zDbM3BH9zPyuD96vRVU9F9gFKa90jfCIPqh/IMQUJkeDaeW1
T3yQ1AdhWZEyvYU0mOdpZ2nEs/qAzxvPWaJMi/nbU1yQV9MHMlrifDcl6TB3
bT0PeLT3gUhfd7vVdzrMKo3qc7WhPuBpHstj26HDhIUxNrES+uCbWn/ehiE9
RlGqQaxroQ/KFu1fzmbRYwYrgnwi/vXBjbGlR5m79JjX93VGzZj64cfB9jlG
NQaMwOwB5VPc/aDCdj2oxJsBU+7TF7pwtB/4JZmnonIZMA8P/1wsEOuH7vFe
nMcYA4Y2w1TL60w/DGswkGRpGTHxV4V/XVPph0jPgaYPRxgxagN4Bo7r/bBs
UbljJ8GIITz79bDndj/o9V1J+ivNiPFneFoaadwPElWRWXCKESMRIXfYwqof
ZrjlKVv8jJhG2ZWXpx36wbTSka+NjhFjV1PQtuTeD9Hsnktp4wwYdqPXp4v9
++HvorTBG2p9GQuX/d986YdR2g6N/zwZMDp+dFMaUf0QMqW6vHOJAbN0tPYy
V2o/yDx91xi9TI/5lv0+ou9vP9CRqz/IxtBjzl/XWosu64fi+EqNQgw9pm+Y
S9eyvh8I6jHP1fvpMDc+PO537KTiD5KcGntKhylVKjZ9O9wP+R3/jGe2aDGx
YY9sYxf64YiUYkj0PxoMj3rhYsYW9ZxJ8bLHcxqM7zKbSxnDAMidPpxrlr8H
1jr5voOHByD2Q9286rkdGNxlYZ0RHgDPc9MC+iP/QPPPg8/rUgMgsWVuruW8
BWdYmKN5rwxAriTbfT33ddiqMirQfjIA4T6NnwtxC2DnkHXJ5OUAyJ/WqJ29
PAejgozVth4DwB8nzmsdRYJKj4z2gM8D0LXQGdB3ZAo+XKAlVRYNwHlaFrHg
b0Ug8DtZ4ALLIEy3ld/6RZlDwQb/4tV5B+FZytqL8KRFRLNf59Td44OwNyKm
Kt2zjHAWm+deyA9CWta699aZDfTnuOat34aDMBht9O7SYxqsYEtsT5HFIPS+
rSgycKDFfnm9alT/bBDuMHlunHOnwzr3R1vjfQZBQ7s595kvA/byl8U3J34P
Ar8bLVOM4X5sFubafpm8QcASyH/drzBjhecjglXQIBieXnwaJcSCZdJU+2nQ
NQhPLzTlLjWxYl22woWsRwZB9/wI061QNiwpdTbFeXoQsoxPXrysx45tY/ye
+/XfILx45xgnX8aBVc0lK8czDsFjCfI9G3NObK45piKLcwiahhwuROxwYsW4
Q6+jI0NQvfphR/Y6FzYczbS0nBwCQnbvH+lALizLs8t3h6WHgM2g6tj3Oi6s
u8DXQdKFIXgYOWx+eY8LO9c4/XDzyhBE3nlatybHjX3oqjK9T3MI7r4NH/xm
zI2VtKjvmdMbAp3IJ111vtzYZe271T1mQzA75RrwJIkbW6o0/rfUbgjSn5+T
0yjnxvqJ2MUlUHW1jsebIwpt3Fgdzo1PgT5D0LImXrHXx409svXW88XHIZiw
iCB49XNjJ3GcT/XDh6Cikj72Qzs3Nr3tpxEkDMGl8din24gb61wsfkMsYwhk
L93XzEjmxkJSjiJ70RCQP/jUeVHr2R8C4itVQ2B6c5FZ14Ab2+nWdHCodQjS
5Jnn9otyYyMf32eoHBgCBwc29g/TXFhLnamlVBw1/zHXlopYLqzcxecTn+aH
YNjE3f6HDhd2U/Rfm/PWEHA1EFTo5jixlVz+5SaMw8AxQMT1iHNig/7x/FHj
Gga/jlzmcG0OrB4h+ufpo8OwVR05o2jOjhXskAzkERuGoOqvExnm1PmW5Lts
yg1DobKA+9otVmxOsqrV+MVhCGY67MkjyYK95m6olnF7GFhmEqSXEvdhuawI
8qHGw3Avan1kUJ0JO3DbQcjdahh2Dv9hnOxiwNqJB+7+5zEMbIaUgKECWux5
Hr5ZuYBh4FbUTRXloMHubccNHfo6TP035nu+TtxGXzqLCvGpw3Auxsrjx3+r
yLhMPaU5ZxjkZGutf1otItHUjtCccmr+e4xBlbUkVOgx4/Cmexg+HBkvjRnq
QqMSR6SP0YyAzGPuty5FJEg9kHSUgXUEolXsWD9dXIIXu3Is5IMj4Ndsn8Z1
fh0YujWmC0+PwMBz9kT6MhqMpJdL3N37I3BKQJps/4kVs/KEIeSi+Qhw5Vj3
3TTlwJTdDfEUfjoCHgV7I2d/cmF0JFONFnxG4E7w/UOTXgcwzj19B4MyRmA/
Rvzy5osjmKrTFwKrGEehqVTg3EyXMMZU9m7CIucoSDf/2XYLPInZkH9ReoJ/
FGT/+5b5DiOCkVL+PfdaZhR2GayEzdNEMd80TtxRuD8Kz+S4eMrtJTAymip2
5majMPqBayL6+ClM/S2DdyG2o3BY9in+b+MpzI7e1wKK1yjYBZQo9gicxlg+
3ieQlDoKNyVPPihNlMbQPBE51/V3FH76JLyZAxlMhN0VbdqyURgf9+UR7JfB
tL587W3SMQqzMgWli7uyGOtX4T8+DI0CaWakK+maHIbudd7fIvwobBjfN2YL
ksNc8JnHHdwahVPi2YJq3Gcwne/Ydq8yjIEk3LRY1TmDsXt/6pADxxiw3gy4
Ext8BhMb8ui/VuEx4CewX0yll8cof/M235YaA+OjF2eJyvKY7u9RryUvjMHg
MH0d6bk8Zn9M3x+/m2OQSIk8sNcpj4mPX6nNvTcG2t2XnDZpzmJUkrnHJx+M
gbv94SlfqbOY3l8ym1w2Y0CSKK0Iu3cWY//nJg84jkEWkze7qPtZDEu29emn
nmOwlWZnIhZ7FpOY+07tZ8AYHI7ZxH+uOIu5XBhv0vBlDB6fiHr9YPwsZqAE
Oa9HUv1DpEP9t89iHNHwJ9GUMagfP6BNz6eA4ajaTL2TPQbRR7Stm6UUMKm1
fJVvSsag9OMV7RGMAka18exQZg3Vf8+I94yuAma4RWdlpG0M+q+9dat6qIBx
7njKzjY4BskburMhdgoYrp5AMWXcGHDkifuHOSlg0vpTwHqO2o+yda7O1woY
9eFq/bCNMRAM26BT9VLALMwvKJrTjoOlI/c7PNUue+Gl7spEtR/xPy/1UMAE
LrPrhrCOw/GdaY06FwXMfadI0xSuccgoPXlj3wsFjMi6pG35wXFwW14w8LRU
wCy6FL3q4R+HL56mHLIGCpjyreu+lBPj4Pck6bfAfwqYD+69IfSi43CjVOHk
zfMKGP1diyh+yXGwqwjkQYIKGFHv5V9nZMchUXi4wmO/AmaJ1idfQ2EcOP57
L/xx9iwGveWqeqA0Ds88zVuW285ighhj2pwvj0OscQlNUeZZjBhzKTFRYxzU
SuclvKzOYpbqZGzitcZBHhd34yHmLKbcL44cozsOfIl0rUN8ZzF6DP5zEcbj
oLgXb9tQKo8Rrtp8Hm42Dn+XFsN0guQxc2/sFkMtx0Hi62lMpIE85t3e7ZUQ
+3EwvvK5L2v2DEanvNop2GkcmGe4cF9yz2AEPC6sf3Abh/Nzwom2rmcwuVsC
W36+4xB4Kz5YcUcOg1ud3nMPH4c5+43svBFZTFau4Ru3qHHI11Tdz6sti3F/
2ULnEj8O7bz2W7dLZDC8i38ZX6aPA8Yp5MlykDTmKsWD9QmWGm9dfO8n12lM
/OSBQ/eI4yBlcP3VsyJRzLM4v3DdWWq8So510H5RjPLDzSM6S+NA2ZGr6tET
wXSOjArc3B4HmtON+98tCmNoB34JX+GagBgTl9jAk4KYh20gI604AVkwFPbi
/EGMVPDfTMlLE7AQ7EiMGjmA2dAUPSOhOgF0kSt3Kv15MJ8aWRROak7A/OHm
mJ0mTkx5TY/SkYcTEFoU/ehHPCMm0FejhO/xBBTy/Nr5JEOP0btaosJrMwF/
l9/8Nq6mwcxhY4HTcQL0JD9smB3fgGOltuqMARMgXuV2wcF6AHiPbG09+zgB
mNm6m/pVpcDmHJDV/4Xqb1yCXzxSg7Zlk46mR03A9wO9xpeuE9BK0NmOgwkT
cKE8XlPYcg6RZyr8vFKp8R6xlwSEltFgwuiibs4ERJwK0QoI20KdNE9TSgsn
QGYWSbQI7KIGk3/GYuUTYDAPt4oQDbbw0OH6zfoJQCXbenwUemyWY7LHo9YJ
yKN7pltlyYhN6VA429I1Af4WR+kIrUzYsA+3o2NHJ+AKS0P+QStmbDBx7A4L
bgJw1nbVa2Es2Hfqz5gdZyYA+1EuZDWHFesev10+MjcBmnI2zqzlbFjHvUDH
6ysTYPktgnghjx1rZ3xEMntzAhbFrcy9f3BgHxWljPHvTUB5ta/xgg0n1pDv
fKgvwyRIVLZGN/NyYXVfVt+YY54EX6tIkQYbLuyNdl0afc5J0KO7f829gAt7
RXoir4J3EgKsDz5e3+LCKgY+tz3NPwmpjuQs7XPcWLnpHcHQE5Og2vpJ4Icl
N1ZCLah3V2QSIoSP6iwEc2NPxPEHWUtOAm8yIcI+gxvLt5t6pVN2EgQYQnCK
NdxYDqML6xfPTcKu9Kkomy5uLFNhTXqS8iSMVkWknxrgxu7w3jXnxExCDh/G
LLKXG7vyYvKQq/okWO+rNiE3cWMprfYtkzcmoU39mt+VIm4s7vSej6bOJAhl
tVOaormxQwEfFfPvTYJ9i0hZkTv1/4M/OnfCiGp/mxFXucONbVRNS3j/cBJi
Jq9o+QlzYytjFA2WH0/CmlK3WAuJC1u0XcthYjsJ876aL66nc2GzDO5V19pP
wnjzw1BpKy5sav6Uq5zzJIQumYUUHeXCxh5wkI14PQldF6oKtb5xYsPtafD0
byZhUWs20wLPgfWXPKbT92ESdD6IOF+0ZMd6+v9mvPJ5EhTlzOe3wtiwzjil
krSwSbDzP1ywWsaKtYzWE/OMm4RGT4Hq7AVmrBpPyLZIwSSQkwU0hDcYsSrP
j/8NLp0E2cfb4UEzDNizzelWGxWTYHXUMM+1hx4r7NfQ2dQ8CSwLQnjWGFos
zRbdL4fJSQieOFQcz7WFHk4NLHtNU/N1a2sITa4jbHPW5Y+USdix+nswMHsV
eceYdqesUfPnZLb7aC2iPbXivWGWKUj8cl2nSHgCmcp8vkHinAIO/V8nDiUP
oPJD1qHrvFPwPMfI9M3hDuRJOnia58QUeBfyvVO6/xztfnqhd/3sFKBzGzU/
OMfB1FUj7q7iFGh7VHQ1zk9BufkJitmlKZgNkpOgKZ2m6qiWN+7XpyDTMWPv
94F5GD2e2Pxec4r6Xudd7bQX4fL+14e+356Cm65xbSVMy7AzKPEn22gKlva/
D3XXWQPj6r318odTIFNtKrc5vg6lf3pVmx9PwfGLZmfUH22Cu7dvP+H5FOxr
DUxKubgNw0+MTq44TgHpScr77ZAdULkj/4zWbQo6ZlP6o3p3YVt0nF7AdwoO
OwtM1ITTYIw5C7RPvaeej1wUFDtJiynd+PjjfPAUdDq6eAsm0WIEJi1wV79O
gSVfrWvEcTqMe9NF2dvhU1BPLzfr/okOM5zL42YaNQWlWWUiuet0GJXomWrb
+Cl4syfTKXufHhPpj+V0TZkCfv4vbFN/6DH/7L8b+qVPwRf3PM3qf/QYQ8Nn
SV+zp4BOyNW6BcOAKb6qvhCbPwWCJ+g+/nNnwPBLC1zMKJkChmfdF25lMWDc
+JbflWCnoLqrV6Z5kAEzuNfQXl9DrcdS/ZXrNgNGeSb2aG/jFJw3/X7T7CAj
JqLzleVU2xQEqJtwfRZlxGyVaGcvdE+B05aAxhGq/jdMEt3eGZiCJukzfuxS
jJji4O1rrGNT8NDh70NfYUYMv0vX58O4KQiWtjf7zsWIcTVLGxadoeZjo1kz
X2PA9N94I352bgrSCCRTpm4GjKKCvgNmeQqcL+xGJfxiwIQfky3T2pgCl18N
jx68YsBsMDHtN9qZglv6OtsPLzFg9BeGda3pcBBVtqrcSe1H4UBOlNM+HOg/
y3g89pcec7gqkOjDhoMv9B4nCszpMS7pZmdDuHEgXHVVN5CVHtMfqugZxYcD
49rlQ0F/6DCKXpwNaUdxwPZJOGFRgw6zfrvMtEYUB/3jJ1CtHS3GZyBz5PJp
HDAT2gTtyTQYDrN440I5HDA1ckfZPaLBiNn7G/6+iIOBVyoOl97swt3g23qf
b+Mg1KyXVshhE8YPqvWw3MdBUvVv6OXbANuo83d9jXGQYeN9LDBnDXzSj+q+
sqLWM+qW0di3DFmNeC0TD2q93hFs24gMKrr9zb0+OPDmM4xqyyZC3UDjTZ0A
HDDQrwliYvAwSsz87+pXHLA/iTwVTP03s+1zUz/1Cwf1/mDOKVIE4cF21fEZ
1HidiCo1fVs4yffgqkAuDrL6X5OsLhQgZVG1K5wIBxj7kOP7EjrQk6scl1a7
cTB5cFvc5ygOrTTSlD4bxMHiVSNhukYC8tZdViaO4SCowDW332oGhZv1Kw6R
cPAs2Vj69tM5JDLTWHB3AQcvHrx0dXmygDLty863ruLgsxLr1OLnRVTrFa9Q
QYOHEzWregKVy0h3X2iOMhMe8plvRGzWr6CRYH/5XFY8zOUHCQxUrSJrPrds
aW48WCy2qD/8u4ZWouzkUvjwkMF3q0P52zryFn2QKSiAh8O/TQj8TzYQ65/b
MhFCeMAePCdTJLeJhEvPS32UwoPfmVPLZ79voYyrp34zyePh7lGz6fhz/5BS
01FJ7wt4ULbSO7Ba8w9V63L82lTBQ7jpyfcMGttIZ5BG4qUqHtoPsQr9LdlG
w2bLyZTrePDM1nPDC+4gqxm8qKUWHvz7lDaDXu2gJfv+xDFdPJDuVldEoR3k
udF40kAfD46/pzMPbO4gFu+y+E4TPPjMhGsuntxFofuyhDQf4eEO32EsYHaR
4Kf42BprPHA0WVVwaO+idL7QE/AMD7sJNG8dtXaRYrR/dOFLav+MWyI/Xt5F
1aJux+Rd8RDm6rHsLrSLdP7YRf72pOLxvRRlu7aDhhQeHBX1xYNtNa4qoGwH
WW6e43z3Hg+8T65ff+GygxbK2OjxwXgYMk9echDbQW4+U2tq3/BU/VVX2Vi3
jRiuF5MSf+AhjX+np9h4GwWzfh5loL47lean1wLx/9CRdqtOi0Q8XAh0pXtn
/g/JGBwsFsnEQ3cV8cpV5S1UeIzyxzcXD51KB2/khW4i1cnKOFwRNb7XRDOT
sIHu29q/T6zGQzXF43CNzTqalL3uwdCIB+cULGNm9BqyWzn2wqKNWm/wQEtp
A3U/eTTpiwzigSb5pwXDvhXEohqv6TuGh0Sxs99F+ZdRKJMrBofDA4vzlV1F
sSWU9klMInEeD/yeFvSCpxdQV9yb9ZOMBPCwjYh6SZ5GYrUXwk7KEeCG3eUS
Qdp6lBXIEfj2HAHCG3xkAqfLkPItvMeUMgEkzkv8XilOQbf6vzxOUCcAR1ft
2yZcAbiQZhVOGhFA5sQBbyndPqDLrJZ4+5AAXzWerwq8GYKPL38KTD0mQLsV
y7USqs6L39ZgSLAnQO2BqKGvDVQe5UjsEvYjwPowMaNRnAx6XW51Ph8IoP6o
iQGGKDD+/XbJZAgB1KaPW495zsGK4F58/E8CsDgey+RoXABPfE8YXRwBXL9N
KV/zWQTmtPRA82QCTNR2+D8+swTHzxo6CGcTQEwnXtPk5TKkrstZ+uQTQJgu
VKKScQXkS/cZTpYQoPHf/F/x4BUo9R7VUq2g4t0dHHnAtgrX1fOuxNcSoHom
3fqK9yp0Mgedo2smgO/NTVLKzCoYt5qfMu8gQFSCw8hLjTUgfFE6VtlLgHte
sbGBkWtgf5+LW3iYABFPn7zpxa+BeapshOgEAdyZZl/bCa7DvU3tk6cIBIg9
cmHi3e110LjxLF2KTIA78kMZAq7roPzz4zm5BQIgj5IIme/rIE1JLz+7SgCS
GZGj7Pc6CF5qvn5hiwC3E46JtOSvA08wuV15j4qnfzzCqnAdGMdYDC8zTEPi
K/Wu8Kx12JCVnLrCPA02SkZV9jHrQPL+z06dYxq+8WpS6N6tw0iH9arGgWnY
9pTVtjRbh3bhAE/Nw9OwePyHYZ7COlS+TNmnc2wabgfM4Nn31iCvujbkjvA0
PGS2PvQZuwapBwlH7otPgy6jtP4j1zWIsGRMMJSaht6/OEz6qTUqb4pImZ6Z
hkd+Dn5hHavgtV8tz+z8NKTNeeBvvVgFB4NHlx9fnIZGi0U2ZuZVsEjzqbPG
TIOevJP/avgK3P8Xp2OnPg2jMfMJN4VW4IZmxcDzG9PwOpzXRC1+GWTn9sjO
d6fh/bq2LsenJRCGE05uBtNwQcFvzeTfIvCGXN71MKXi8xlv1zRbhK0zHlzv
rKchmf723WNHF6DaaUvhq/s05PlOdHJHkSC/9kh52JtpCDzOf+/tiRn4dUjp
eoTfNBx+lCqL+zENwUWvDOJCpkF6KUCJ3hUHBjsrHpmJ1H5a3rrKRRiCOd/5
2qbmaRA8EDGRthsIEz0cOm0d1PN7iQn55xJRt5jMQGfvNIicck8Xe1OAiurt
yAPj0zB34AzL+k498mUjcRJXpuFLCMue0/UB5GzC/IO8ScWDrqWKGw6jJxkS
wvO701DYz+iwbDKGtHWsFNb2E+HNgeo6hYhJdOQbTp/hGBHyC/p6y/emkeLb
E3yOwkQ4SAgiHTeYQXoOhl1T4kSoWpp9uZVIQl902rWq5InQpEdzmZlnFmUB
K+tZRSIIZ1icvCI/h9pkrtXHXyJCoWaUxK7qPGJjL1X10SCCH0v3/JmIBSS5
vba3qEWEv39enBFnWUQa5DNlZneIkB0puhb7YhFZDtq5degTwfjrg3bX9kX0
riHlwhVTIqwv3HMOofJVYuHkStYjItAKKjXXvVxClSnH/go+IQJF7hWFqXAJ
jYfpPw95Rr2fj0NGaXkJ7b77KkXjSMU3TZbQFl1GAk6tM89diWB316RQSXsZ
XbRgThnzJEKl04d/y0+XkeEdNYtbvkSQ6mO56+q7jFxUvYTQe2r+cE/zxs/L
KOxM8ajMJyLoXL9DSwldRrmCqz+jvxGBmRJ6aTpkGXVyyhlwRBBBM5Gi1eCz
jBZ3bfg8Y4hwbTTfP8F2GXHNJXXNJhJBQsZY98PNZSQzMh5ikkaEZNuOwxHC
y0iz+ah2SyYRtsKNlWYXlpBNiR7rpTwicNfHLiflL6GAtM/16cVE+LD57+4M
FX/Kj+Z3AlginP955eS4xBKqDdh3NaiGCKX7R2ryexYR7pUqzXYjEUK4raWj
3BYRnZVHmW07dR5ylUW1hxaRoF6h21APEaawecdt/iwgEwWZ1eJxImB/5Dzj
8ZtH7ief/JUkEEFAr2qA3n8ORfAkPo8gE6Fhzd9j2G0W9S4cIbmuUefxLYDV
6RIZrYzdTZn5R4S992aPDNlJ6EDbJwsD2hnQSiFcetFJpO5fxjFFthnwvWD1
O/MyATU8WexaF5oBo0cC9xOyxxFRX+qzlfgMMCs/DdFxG0VMGlbafVIzcDJF
S8TIbwipio3U51+YgSL1oM7jb3tQ6WR9mZPWDKTv/WgXeV6JMoxiU5ZdZmCg
nL+LxaIVFPpObjF5zsDWDeUlvrkOKNFN0eR/OwM/apNVJWO7of6/jEXMxxlw
yGHOFZ8cgFs1Z9TufpkBIRaX2P32w9CLyQuz+j5D3b/1WQPzozB1ofRicNwM
kBziF9D4BNjkQHBc8gw4KZ29gd0/BQsyVeO5v2dgTsgyBieOg13RxndDeTMw
9sbVcf4/6l6I0+qfK56BGKH6QFbNaWA91iFJh52BnMjXPAVXiXCYt79NonEG
Dva4lerzkCD6k5GwStsMaDKGtKYSSSDKOuZ4q3sGXNsO2arkkCHdz7zOfGAG
WoZudze/oIA8HeGI8+gM1O7+eHRYZBaKPJ7YvZ+agQtAjJ5smAXMJqU8kjgD
ps4ymivmc1DraM+dNTsDk70ffY7Oz4HWwvKjqqUZkH7xoOj0s3notn2V37s+
A4ZprD07Y/NgOL21n7RN7W9T72FF4QWYMPc02qElQfoCupejtQDWo7QZXPtI
8GwpQPexwwLMGbyjEWEjwdjV+HfqIQvg1LP/zgVuErR99D+tnbIA2zpBSTf4
SKDY6nfNvWABfJo5N0yOksBM6mlUG3YB9mt8vfFCkAR7jEeLblQtwKcqvihf
URK84aedWCpfAD6ImP8uSQJpmfd87TkLEFl8TPW3LAn6CHacs3ELcPJ83Ldy
BRIkM+/K3H+/AGnZItMdSiR4l/fI87jNAshJpyrhL5Og+317wj21BShIPR20
cZUEiyfy+7kPL8BlkcxR1v9IsCqyWtbTOA/VMfJnTmiTYMHWhrSqPw83j+a/
lb9DAvXd+a9lg3PQGabUq65PArppvWEbnTnQ5ymTMDAhgfcvpo+Y4lkY+4h5
bWdOAuPjohvvDs8Cxfe64Fc7Etzz55L+Sp3nS5omh+QXJKicaTiyt0CCrdfa
NUXOJDjukVsmLEKCfS/v2Yx7k4D/eEImw1Mq75o9ypUOJcEVD4kcwW84SB0m
MF2JoOYf7U05GjgFsvo2BndjSPD7vEMMq+skqNx6sev2iwReEY8xMVfH4f4l
L436MhIcuzkklHOmD4ZXCZyVlSRopA8XCO3qBvMM7b6SOhKwn9l3SPt5J9id
OG6Z2UGth2F5SUyuCXxoy96G4UmQ+jD73j7tDNhfLHIzhETFq/e9S1A3FD46
BPEEzpMgxODUzZGxzyh8yijOY5MEd9tzf4zMF6CMmq1yC3YyyCY7uQdutiIF
T3M/Ux4yjLyk+aLf1IGKzjdq6R8iQ5CZai8/dzeqTvkxfFOIDA4NU0lVnv3o
v4e0iepiZGDKm9GhTRpErYef2MJpMsRcvlEvgIbRwHvFLflzZFj/KktDejyO
TFVjK6SUyaA8L1jtYjqBcFv73osBGcK8I91cbk2iOdu+Q/z/keFz1RnysyM4
5CgCYwe0yeAYnyCNXcShzeHkZPY7ZECOQ38uVOARg7bzOVoTMjCwY1mc1aZR
INPo9pYZtf6Z5JLc9WnEidSrVyzJUHbM7g1zHBF9e/Xnw5wtGZy+MMkqY2YQ
v9zBO0R7MsTp/vjL1TODYoju/JNOZChmkhQ3ekBCInG4iSE3MnCoZ+LIoySU
ZqD5q8eLDIdaXwT/uENGsjy59m2+ZKDYl56AMjLKbTyq2PCeDE10fWslRylI
+e3bvcpgMjDa/je6/IyC0EVybelXMtgHW/C25VOQ2opucH44GSytOW8rL1NQ
Y3rxvawoMpS+7GsQE5lFtx4LH0uLJwMNs5pC4H+zqPtYIC4hhQyBgk9rTR/N
IsPexd9R6WTgdO09l/BiFo0HG7z8nk0GlpGQXEPHWfT4eoXy53wy9E8mUIJs
ZxFpT4LuQwkZSAJVm+r3Z5F9YUiDL5Zq2+mahV2YRWv2GyGeNWSQKi3b/5Vt
Fr0+9VDfpZEMJdsSkvd6KYhmsu6EQxt13jSe17e+UZBfhOy0bTcZxNRGjyZq
UBDbne8ZjwfIIO3s9cFlkYw+s+45PRglQyRp83PcJzLiq7a8ZDBFBjlmblmt
k2QU6d7KcIdIBg3O3dt/0klI6Nz5Zs1ZMrSevFa1fpqEkmejvl5bIoOInii7
ZdwMyjZ9Kqy8TQb1PK53yc+JyDxv4VgsLQWEr3rdsiueRrxsjkeY9lHAI7Ge
uW+LgJyL3Lg6uSnwn52V9wlTPFLmDdh9Ik6Bileb33eKJhDZhnWrTYoCjlcr
7t4sG0eRFcGr5+QpoGQ7zn/35RjafRZKob1EAUF+9gPHYAhVNsQP/tClwIGA
6C114070UlCsd+8+BUoHTp8S5WpHIq9+dTw2oYCPjJBRlXsT8hPJqj9jTQGO
7ZSCDwKV6KZXWX6DBwUwWuS9Y06u0K3Q/2UzlQKXdZisS9I74d0Ho+AHGRSI
56V5LtPZDecnR9/X5FCg1T6Z/IrSC+Gf8N6fyykQ4BouN/hvEP4jWLuvV1Fg
O1Z0QGJ+GLZUKK9MGiigpiXuVdw1CiakpWenuilgHDRrlXV+AjiuONt8GqCA
2GA550uuScB+33y8OkqBuXJXOY2JSRBWpzGpmKHAG386mQZLHHT9fKsvPk+B
qRksVzs/HnyXmO5+XKHAMWtiaQxVFxNi2G8a7FHgkJ/kDd8NAnxfC7mGGGbh
81NLqaM+06ChxasqyjILYl1BbF40RNhM+H7pA+cspGY3UTxeEiFti19pkXcW
Zn/NiJMHiWB0O1rhPv8sZJgMvvm/4XIPhzqN4jhq3RuVlHqqiWSNiNYolziT
rZRL5TJyGblUEkWrHpc2Ngnbha11mWLFk8vKpaRSJG+jmwqFjFyiyZhheN+f
Jiuh2t+f5znnOc8533++n2/+hhHQLNUzf8jEYODbbhmXMgIN34vWrl6DwX68
U5FH+3Qk1+jns8YYWPHIbL2SDFZVlOtTZhjMBXW5UlMZtCuZreRaYji8hH3/
mKsMknyqlz6wwaARa/vX60AZsKssdfQ4GC6H8gTTB2UwpFw7P3UrhuSFOHGa
9ols/02a2AnD+Ieui91uMnC8g1Q8dmPoNxGvL6V9bUr91zm1XAxHMpP0TmrI
YCFhZDb6YjCxPtfl2zMCa9t6DJoDMOQ48oy/XR2BLXdK7nbux9AuTw9K9KE5
gB+1beAQhp0rMu6rqY9AzAn7ruEIDLqNeTvrq2hu9FcPlR/D0HJmvs5jmtvL
OMKpmVgMi93D6p1FUni8+trZnxIwNIU25aeGS6FPOWKZVhIGr16Fm+VjEpgc
sS7X/ROD/ueAPeP76dxc1da89m8Mdc2OKq22Q+CQkedvyccgPqkTN5wjBr/o
Q8T+Hww9X1l6hvJBSN+kON+9BMPVk2qOZuc+QimzpcCvHMNsxrXujFciEChd
WX+gCkPVquHzrsoimGgy94ilffaoX8jH5e394MsNzL7aiuFfk0vs5z1dsCYC
LR+dxMAIV0W3tQRg73a+cmIGg+YhXkilSR14s/fYf1cgMJfFfcVhV8O5aRKw
QIMAp4lv1TqVCOMpKws3MgnstlB/FLTvIVIPk1lsNiCwaSSm0DurEa12rXni
xCIQ6zRnOUQ+Q17aOyX+FgS2HsyR1/9oQfX58awzjgSqc4oFdpZCJDy9oy7N
hYC+rXxd/GgXog7oOPPdCJh4TRQb8ruRvknl4TI/AqkCrxus5j5kqxX37XYg
ga5n83K2e/YjT/mW9IcHCNh9OvqA93oApd7vu/kmkoDLkSE3nZ0iVJBbyuk5
TkAh7P33sEkRqks43jYYR6DGQ1nTlP8RdQRxgnECobmiIItpPojGtmh+nkwi
cGJm7hc1wSBSNnqXpHCWQIN410DNDjFiahQtUk+n51Mq9k+8ECMrElmsnUFg
gG2/OHPzEHJvs92w4jIBwYmrmuFVQ0jdVkNQn0fgXnp3VZaeBAmKepx5hfR9
WXwqPFWCYhllwplSAu4r1to0iiTIPDYuKPcGgYD/jDqizKVoWLR9zOYOgeyA
6Pf+x6Qo31k3pqeWwLWZkNBDZVLkdVeqeAIRsPKUxCZ2ShGDee/C0qcEPjuW
aV2ekNJ5KGVJ7UsCXouOmBSrDKN4Ofea9xsCO8CstYQxjNi8NaZTnbQeiknj
BWrDaOzpxD1+LwE1H3Fy3pQUFZo9cdgoovVw0Y+s6JUi3ysZLUIJ/W/EQORg
tRQtnLPPO3qMQNxX81V7E6ToxeFfBnXkBBb4HOi1s5eiU0LFiLtfaC70my2/
LpcgK07blOc3AiSlj92aK0HU9YKkCSUKxn5v57+3lqAS7aOMTFUKbHJCfbRa
htDeeLhiwaBA6GDoUMAdQjpShkGHNgXpyY527R1idKau0nohkwKKxx2zrh5E
mwzin9wyoMA0v1aooT2IPqe57HIzpsCD7YNrwj6i4KDR/Rct6X1N0gVKCiLE
UWVdZLjQdfCXYJ+cXjT129SyG24UFO2qkLzp70Y3e58Xu+6hgEONvgxe8g6t
vBny4EIwBdsny+eeDn2LZrlFEvU4CsI+NCXXOb1A9wqZdiolFOgabb30R30F
RMyjnpeUU3BqWW4qM6oGDGMa3LfdouDO3u9K5tENkOnkH5pcT0GXdyIrjfkc
oj7lZMzpoKBxtkKLtawDjP3CVha+o6Cf2djEF78F0RPr6w79dP9CUX92oRB2
X37XkDhCgaPYLW10phtUlUp36FEUKCsbVBVl9AIKj3n7aIKCLN021Zrl7yG6
c1tA4DQFfTbN4n3Z/bAOFst+/KAgdrdR/vSPAfgfkhgRtg==
       "]]},
     Annotation[#, "Charting`Private`Tag$7140720#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {-5., 25.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.91553485925043*^9, 3.9155348984785967`*^9, 
  3.915534968684226*^9, 3.915535053456451*^9, 3.915535171170546*^9, 
  3.915602732857286*^9},
 CellLabel->
  "Out[1247]=",ExpressionUUID->"2f241d53-193b-42b0-8c93-b53737a5c7eb"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.4 Inherited,
FrontEndVersion->"13.2 para Mac OS X ARM (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"41847429-2c96-4c78-a33b-727f418a7577"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 356, 7, 61, "Input",ExpressionUUID->"49243175-8439-47b8-9a72-4f8a5d0407e2"],
Cell[917, 29, 260, 6, 42, "Input",ExpressionUUID->"8b3570b2-53a9-4f3f-9370-a894d2384f9f"],
Cell[1180, 37, 421, 9, 63, "Input",ExpressionUUID->"344c46a3-77f7-4ed3-810d-1cdab31e64f4"],
Cell[CellGroupData[{
Cell[1626, 50, 648, 17, 61, "Input",ExpressionUUID->"3f817989-ddaf-47d3-8ebb-cdf3d8ca05e0"],
Cell[2277, 69, 376, 7, 48, "Output",ExpressionUUID->"e9cf0565-d74c-4c8d-86c2-5b050ab037a6"]
}, Open  ]],
Cell[2668, 79, 264, 6, 42, "Input",ExpressionUUID->"8dd3e2fd-5f1d-4e58-8cd1-3e12e107e9d7"],
Cell[CellGroupData[{
Cell[2957, 89, 1078, 21, 61, "Input",ExpressionUUID->"d1cb82f7-ca8c-47c2-8358-1b943b425fdd"],
Cell[4038, 112, 1422, 35, 78, "Output",ExpressionUUID->"daf105de-33e3-451e-b47c-d99f1f8a4047"]
}, Open  ]],
Cell[5475, 150, 286, 5, 42, "Input",ExpressionUUID->"c9646888-737d-4041-9508-7a5c77764b4f"],
Cell[5764, 157, 1288, 31, 134, "Input",ExpressionUUID->"71bc219a-4eb8-46d9-b87b-afaff6d9f54c"],
Cell[7055, 190, 363, 8, 42, "Input",ExpressionUUID->"40e87909-1457-4ae4-8b15-57a6375ca2ed"],
Cell[7421, 200, 422, 11, 72, "Input",ExpressionUUID->"60e72b82-168d-4eec-87ac-723607f21055"],
Cell[7846, 213, 336, 6, 42, "Input",ExpressionUUID->"8959690f-01f2-4545-b622-1b30eac1406c"],
Cell[CellGroupData[{
Cell[8207, 223, 886, 20, 111, "Input",ExpressionUUID->"b6778d21-ba38-461e-8bd2-76b9d5dc14e4"],
Cell[9096, 245, 893, 17, 78, "Output",ExpressionUUID->"aab5543f-4f2d-4775-a8aa-aedebc9d800e"],
Cell[9992, 264, 963, 20, 78, "Output",ExpressionUUID->"d9777304-134d-4579-bef0-fb656d10bec7"]
}, Open  ]],
Cell[10970, 287, 324, 8, 42, "Input",ExpressionUUID->"5e4c5023-4327-47c6-98aa-7e92a8d760c2"],
Cell[CellGroupData[{
Cell[11319, 299, 2085, 67, 311, "Input",ExpressionUUID->"a6e1cc3f-cee2-469c-ae4f-d762b2642002"],
Cell[13407, 368, 1207, 36, 119, "Output",ExpressionUUID->"0afb37b0-c075-4232-b87b-f940b0bc6bd6"]
}, Open  ]],
Cell[14629, 407, 144, 2, 42, "Input",ExpressionUUID->"f72cd3ea-9816-4bea-aa81-0e3c7a90d178"],
Cell[14776, 411, 152, 3, 42, "Input",ExpressionUUID->"7c346680-a799-4e7a-8ccb-da7138b24c76"],
Cell[CellGroupData[{
Cell[14953, 418, 422, 8, 61, "Input",ExpressionUUID->"4d8771d6-6a00-42c3-8172-a36172c26bfe"],
Cell[15378, 428, 961, 21, 78, "Output",ExpressionUUID->"4d5ed5b3-c0a9-454f-82d0-a4489b8bc6e3"]
}, Open  ]],
Cell[16354, 452, 774, 17, 53, "Input",ExpressionUUID->"0decb0a3-e875-40cd-9b0d-da8850fcb9b8"],
Cell[CellGroupData[{
Cell[17153, 473, 605, 15, 98, "Input",ExpressionUUID->"a09256a5-a11b-4cfb-9c5e-459ae7c3d145"],
Cell[17761, 490, 445, 10, 39, "Message",ExpressionUUID->"e38e3c9b-6aa3-41ee-8a7e-f66a5babcc01"],
Cell[18209, 502, 632, 14, 73, "Output",ExpressionUUID->"d62879e7-ee44-4b13-bad3-1685f12df57e"]
}, Open  ]],
Cell[18856, 519, 620, 15, 72, "Input",ExpressionUUID->"7b55a726-a046-4239-858b-d2935d4eab32"],
Cell[19479, 536, 451, 9, 42, "Input",ExpressionUUID->"bd251575-b615-4eec-8881-8c6608de1953"],
Cell[19933, 547, 1538, 39, 182, "Input",ExpressionUUID->"68cc7ebc-f4d7-4b14-a890-398202c1d485"],
Cell[CellGroupData[{
Cell[21496, 590, 1168, 32, 143, "Input",ExpressionUUID->"9f424b9b-6fd1-4e6c-9855-46c9fa07f683"],
Cell[22667, 624, 669, 13, 62, "Output",ExpressionUUID->"8fc874a3-1bfd-4d90-aefc-3fc3fe9fb48e"],
Cell[23339, 639, 669, 13, 62, "Output",ExpressionUUID->"360499f8-2c15-4370-9125-5ac3cbb13607"]
}, Open  ]],
Cell[24023, 655, 379, 9, 42, "Input",ExpressionUUID->"a8dc53ba-d698-42ea-b272-512eebc3ba76"],
Cell[CellGroupData[{
Cell[24427, 668, 1207, 29, 91, "Input",ExpressionUUID->"c111e823-8c3d-4ac1-babd-190aba735257"],
Cell[25637, 699, 833, 15, 48, "Output",ExpressionUUID->"942a28b5-cff6-4a35-933f-c0251faab682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26507, 719, 479, 13, 64, "Input",ExpressionUUID->"f3fd4e0b-083b-4d73-a759-ce1a0e370b72"],
Cell[26989, 734, 616, 18, 72, "Output",ExpressionUUID->"7fe273a6-6725-4bc9-b786-cfe8bc010b89"]
}, Open  ]],
Cell[27620, 755, 596, 13, 61, "Input",ExpressionUUID->"803f5e1a-a8c3-4258-a760-990d4332dfc8"],
Cell[CellGroupData[{
Cell[28241, 772, 653, 18, 93, "Input",ExpressionUUID->"900b7689-15d5-4761-a33c-299102ac75be"],
Cell[28897, 792, 470, 12, 81, "Output",ExpressionUUID->"f6968f0d-96b9-4e31-b7a5-7f2f87d1f68a"]
}, Open  ]],
Cell[29382, 807, 295, 7, 42, "Input",ExpressionUUID->"2ea4019d-a1e1-48f5-872a-e3bd3c48d617"],
Cell[CellGroupData[{
Cell[29702, 818, 1256, 30, 91, "Input",ExpressionUUID->"e6492190-6062-4e6d-be6c-56e6ee3c8a4c"],
Cell[30961, 850, 853, 15, 48, "Output",ExpressionUUID->"61274dc1-5bb8-4b87-8ec4-b905506de0a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31851, 870, 743, 20, 64, "Input",ExpressionUUID->"83fa193c-5eaf-4fe3-8dc8-2085e9ae0dc0"],
Cell[32597, 892, 695, 19, 72, "Output",ExpressionUUID->"dab620e0-5b11-4db8-860a-517871994190"]
}, Open  ]],
Cell[33307, 914, 641, 15, 93, "Input",ExpressionUUID->"670acfcf-4a48-4a53-99ff-019105ccbaf4"],
Cell[CellGroupData[{
Cell[33973, 933, 707, 19, 93, "Input",ExpressionUUID->"3f4d4482-577f-4fcd-bd76-0b36cbfa3bc8"],
Cell[34683, 954, 423, 11, 81, "Output",ExpressionUUID->"45bf7de0-d719-481f-92e7-ad9a57f39ecd"]
}, Open  ]],
Cell[35121, 968, 269, 6, 42, "Input",ExpressionUUID->"84abf08b-c4a3-4f53-86c0-32965d786085"],
Cell[CellGroupData[{
Cell[35415, 978, 829, 25, 87, "Input",ExpressionUUID->"ea7fde95-5d40-4c40-9f56-927dd8250644"],
Cell[36247, 1005, 294, 5, 48, "Output",ExpressionUUID->"ba7f5e46-c50e-454f-80f0-36e5928ee7a9"]
}, Open  ]],
Cell[36556, 1013, 279, 6, 42, "Input",ExpressionUUID->"5466d692-741e-431c-adf7-a93eb4788482"],
Cell[CellGroupData[{
Cell[36860, 1023, 1060, 31, 148, "Input",ExpressionUUID->"0eed277e-964f-4373-9b2a-6e14effe7a24"],
Cell[37923, 1056, 30386, 520, 334, "Output",ExpressionUUID->"c44050b7-3bfe-4e1f-ac6c-297e17f048df"]
}, Open  ]],
Cell[68324, 1579, 340, 8, 72, "Input",ExpressionUUID->"27e1d987-67fb-4325-8f6e-a4e5361cdf3d"],
Cell[CellGroupData[{
Cell[68689, 1591, 1813, 53, 345, "Input",ExpressionUUID->"4be0d36b-8a77-4d24-aa0a-1ebda0546787"],
Cell[70505, 1646, 47035, 788, 338, "Output",ExpressionUUID->"2f241d53-193b-42b0-8c93-b53737a5c7eb"]
}, Open  ]]
}
]
*)

